[{"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\index.js":"1","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\App.js":"2","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\menu.js":"3","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\Login.js":"4","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\home.js":"5","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\MessagePage.js":"6","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\footer.js":"7","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\CommunityPage.js":"8","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\register.js":"9","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateTopic.js":"10","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateUser.js":"11","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateCategory.js":"12","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\admin.js":"13","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateNewPassword.js":"14","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\profile.js":"15","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\UserInfo.js":"16","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\API.js":"17","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\Config.js":"18"},{"size":575,"mtime":1649172756210,"results":"19","hashOfConfig":"20"},{"size":1965,"mtime":1649172747018,"results":"21","hashOfConfig":"20"},{"size":5350,"mtime":1661700384102,"results":"22","hashOfConfig":"20"},{"size":9209,"mtime":1659795033302,"results":"23","hashOfConfig":"20"},{"size":2362,"mtime":1661697722848,"results":"24","hashOfConfig":"20"},{"size":10909,"mtime":1659795029875,"results":"25","hashOfConfig":"20"},{"size":5623,"mtime":1659823389796,"results":"26","hashOfConfig":"20"},{"size":14890,"mtime":1661700651114,"results":"27","hashOfConfig":"20"},{"size":8144,"mtime":1659795019055,"results":"28","hashOfConfig":"20"},{"size":4139,"mtime":1659795005310,"results":"29","hashOfConfig":"20"},{"size":10047,"mtime":1659794998517,"results":"30","hashOfConfig":"20"},{"size":4353,"mtime":1659795012055,"results":"31","hashOfConfig":"20"},{"size":16263,"mtime":1659794945480,"results":"32","hashOfConfig":"20"},{"size":4814,"mtime":1659795008847,"results":"33","hashOfConfig":"20"},{"size":49140,"mtime":1659795026011,"results":"34","hashOfConfig":"20"},{"size":4229,"mtime":1659794992851,"results":"35","hashOfConfig":"20"},{"size":2423,"mtime":1649172750702,"results":"36","hashOfConfig":"20"},{"size":150,"mtime":1659361119527,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1a7708g",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\index.js",[],["86","87"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\App.js",[],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\menu.js",["88","89","90","91","92","93"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\Login.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"import { useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport '../style/login_page.css';\r\nimport { useState } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { API } from '../API';\r\nimport swal from 'sweetalert';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  // for popup add topic close or open window\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const [Email, setEmail] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n\r\n  const [Id, setId] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n  // Initialize a boolean state\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n\r\n  // פונקציה המאפשרת להשפיע על ההצגה של הסיסמא כטקסט או נקודות\r\n  const togglePassword = () => {\r\n    // When the handler is invoked\r\n    // inverse the boolean state of passwordShown\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //טיפול בשגיאות\r\n  const checkLogin = async () => {\r\n\r\n    if (Email == '' || Password == '') {\r\n      swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    else {\r\n      loginUser();\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  // אם השדה ריק id טיפול בשגיאה בהכנסת \r\n  const checkIdForget = async () => {\r\n\r\n    if (Id == '') {\r\n      swal(\"Stop\", \"You need to fill in the field!\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    else {\r\n      ForgetPassword();\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  //פונקציה שמטפלת במקרה אם משתמש שכח את הסיסמא שלו וייצור אחת חדשה \r\n  const ForgetPassword = async () => {\r\n\r\n    try {\r\n      let user = { Id }\r\n\r\n      let res = await fetch(API.USERS.FORGET, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n      });\r\n\r\n      let data = await res.json()\r\n\r\n      let u = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n      if (u != null || u != undefined) { // אם יש משתמש מחובר אז לא ניתן לבצע התחברות חדשה\r\n        swal(\"Stop\", \"You need to logout first!\", \"warning\");\r\n        return;\r\n      }\r\n\r\n      else {\r\n        history.push(`/updateNewPassword/${data.User_code}`); //מעבר לדף עדכון סיסמא חדשה אם שכח את הישנה\r\n        window.location.reload(false); // רענון דף\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  // פונקציה שמטפלת בהתחברות המשתמש לאתר\r\n  const loginUser = async () => {\r\n\r\n    try {\r\n      let user = { Email, Password }\r\n\r\n      let res = await fetch(API.USERS.LOGIN, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n      });\r\n\r\n      let data = await res.json() // ממיר את הres לאובייקט json\r\n      let u = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n      if (u != null || u != undefined) { // אם יש משתמש מחובר אז לא ניתן לבצע התחברות חדשה\r\n        swal(\"Stop\", \"You need to logout first!\", \"warning\");\r\n        return;\r\n      }\r\n\r\n\r\n      // אם המשתמש לא מחובר - ניתן לבצע התחברות - לפי סוג משתמש\r\n      if (data.UserType_code == 1) { // מעבר לדף פרופיל של משתמש ספציפי\r\n        sessionStorage.setItem(\"user\", JSON.stringify(data))\r\n        history.push(`/Profile/${data.User_code}`);\r\n        window.location.reload(false); // רענון דף\r\n      }\r\n\r\n      if (data.UserType_code == 2) { // מעבר לדף מנהל האתר\r\n        sessionStorage.setItem(\"user\", JSON.stringify(data))\r\n        history.push(`/Admin/${data.User_code}`);\r\n        window.location.reload(false);\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // פונקציה הבודקת אם המשתמש מחובר או לא כדי לדעת אם המשתמש זקוק להרשמה לאתר\r\n  const checkUserLogin = async () => {\r\n\r\n    let u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n    if (u != null || u != undefined) {\r\n      swal(\"Stop\", \"You need to Logout first!\", \"warning\");\r\n    }\r\n    else {\r\n      history.push(`/Register`);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  //connect demo user\r\n  const loginUserDemo = async () => {\r\n\r\n    try {\r\n      let user = {\r\n        Email: \"User@gmail.com\",\r\n        Password: \"1111\"\r\n      }\r\n\r\n      let res = await fetch(API.USERS.LOGIN, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n      });\r\n\r\n\r\n      let data = await res.json() // ממיר את הres לאובייקט json\r\n      let u = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n\r\n      if (u != null || u != undefined) { // אם יש משתמש מחובר אז לא ניתן לבצע התחברות חדשה\r\n        swal(\"Stop\", \"You need to logout first!\", \"warning\");\r\n        return;\r\n      }\r\n\r\n\r\n      // אם המשתמש לא מחובר - ניתן לבצע התחברות - לפי סוג משתמש\r\n      if (data.UserType_code == 1) { // מעבר לדף פרופיל של משתמש ספציפי\r\n        sessionStorage.setItem(\"user\", JSON.stringify(data))\r\n        history.push(`/Profile/${data.User_code}`);\r\n        window.location.reload(false); // רענון דף\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <section className=\"banner\">\r\n\r\n        <div className=\"box contect\">\r\n\r\n          <div className=\"log\">\r\n            <h3>How good you are back to us! 😎</h3>\r\n            <br></br>\r\n\r\n            <input type=\"email\"\r\n              id=\"fname\"\r\n              name=\"fname\"\r\n              placeholder=\"Email\"\r\n              value={Email}\r\n              onChange={(event) => setEmail(event.target.value)} />\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n            <div className='hidePass'>\r\n              <input type={passwordShown ? \"text\" : \"password\"}\r\n                id=\"fname\"\r\n                name=\"fname\"\r\n                placeholder=\"Password\"\r\n                value={Password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n\r\n\r\n              <a onClick={togglePassword}><img src=\"https://img.icons8.com/ios-glyphs/30/000000/visible--v2.png\" /></a>\r\n            </div>\r\n\r\n\r\n            <Button variant=\"primary\" type=\"Login\" onClick={checkLogin}>\r\n              Login\r\n            </Button>\r\n\r\n            <br />\r\n\r\n\r\n\r\n            <a href=\"#\" className=\"forget\" onClick={loginUserDemo}\r\n              style={{ textDecoration: \"none\", color: \"black\", fontWeight: \"600\", fontSize: \"13px\", }}\r\n            >Connect Demo User\r\n            </a>\r\n\r\n\r\n            <br />\r\n            <br />\r\n\r\n\r\n            <Form.Text className=\"text-muted\">\r\n              Forgot your password? Immediate recovery from here.\r\n              Or you can contact us.\r\n            </Form.Text>\r\n\r\n\r\n            <a href=\"#\" className=\"forget\" onClick={handleShow}\r\n              style={{ textDecoration: \"none\", color: \"black\", fontWeight: \"bold\", fontSize: \"14px\", }}\r\n            >Password Recovery\r\n            </a>\r\n\r\n\r\n\r\n            <Modal show={show} onHide={handleClose} animation={true} size=\"lg\"\r\n              aria-labelledby=\"contained-modal-title-vcenter\"\r\n              centered\r\n            >\r\n\r\n              <section className=\"window1\">\r\n\r\n                <div className=\"boxWin image\">\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"boxWin contectWin\">\r\n\r\n                  <div className=\"AddTopicPop\">\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>User Id :</label><br />\r\n                    <input type=\"text\"\r\n                      required\r\n                      placeholder=\"User Id\"\r\n                      value={Id}\r\n                      onChange={(event) => setId(event.target.value)}\r\n                    />\r\n\r\n                    <br></br>\r\n\r\n                    <Button variant=\"success\" type=\"addTopic\" onClick={checkIdForget}>\r\n                      Set Id\r\n                    </Button>\r\n\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Modal>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"box image\">\r\n\r\n          <div className=\"imageLogin\">\r\n\r\n            <Form>\r\n              <Form.Text className=\"text-muted1\">\r\n                <p>you don't have user?</p>\r\n              </Form.Text>\r\n              <br></br>\r\n\r\n              <Button variant=\"primary\"\r\n                type=\"Login\"\r\n                onClick={checkUserLogin}\r\n                style={{ textDecoration: \"none\", color: \"white\", fontSize: \"17px\" }}>\r\n                Register here!\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Login;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\home.js",["108","109"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\MessagePage.js",["110","111","112","113","114","115"],"import '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { API } from '../API';\r\nimport { Button } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst MessagePage = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [topics, SetTopics] = useState([])//הצגת כותרת \r\n    const [comments, SetComments] = useState([]) //הצגת תגובות\r\n    const [comment, SetComment] = useState('') //הוספת תגובה\r\n    \r\n\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    let u = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n\r\n\r\n\r\n    const LoadTopics = async () => {\r\n\r\n        let res = await fetch(`${API.TOPICS.GET}/${id}/message`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetTopics(data);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const LoadComments = async () => {\r\n\r\n        let res = await fetch(`${API.COMMENTS.GET}/${id}/comments`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetComments(data);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const checkComment = async () => {\r\n\r\n        if (comment == '') {\r\n            swal(\"Stop\", \"You need to add a comment!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        else {\r\n            addComment();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const addComment = async () => {\r\n\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        if (userData == null || userData == undefined) {\r\n            swal(\"Stop!\", \"You need to sign in!\", \"warning\");\r\n            history.push(\"/Login\");\r\n        }\r\n\r\n        try {\r\n            let publishBy = userData.User_code;\r\n            let d = new Date();\r\n\r\n            let user = {\r\n                Topic_number: id,\r\n                Comment: comment,\r\n                Publish_by: publishBy,\r\n                Date_published: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`\r\n            }\r\n            console.log(user);\r\n            let res = await fetch(API.COMMENTS.ADD, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n\r\n            swal(\"Added a comment successfully!\", \"\", \"success\");\r\n            window.location.reload(false); // רענון דף\r\n            let data = await res.json()\r\n            console.log(data)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadTopics();\r\n        LoadComments();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    if (u != null || u != undefined) {\r\n        return (\r\n\r\n            <div className=\"formMessage\">\r\n\r\n                {topics.map(topic =>\r\n\r\n                    <div className=\"titlePageMessage\">\r\n                        <p >\r\n                            <NavLink to={`/`}>\r\n                                <img src={require(\"../images/hhh.png\").default}\r\n                                    style={{ margin: \"5px\", paddingBottom: \"4px\" }}\r\n                                    width=\"37\"\r\n                                    height=\"37\"\r\n                                    alt=\"Profile\"\r\n                                />\r\n                            </NavLink>\r\n\r\n\r\n                            <NavLink to={`/CommunityPage/${topic.Category_code}`}\r\n                                style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                <a target=\"_blank\">  Community Page {'> '} </a>\r\n                            </NavLink>\r\n\r\n                            Message Page {'> '}\r\n\r\n                            {topic.Topic_title}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"topic-container\">\r\n\r\n                    <div className=\"head\">\r\n\r\n                        <div className=\"authors\">Author</div>\r\n                        <div className=\"content\">Topic: random topic</div>\r\n\r\n                    </div>\r\n\r\n\r\n                 \r\n                    {topics.map(topic =>\r\n                        <div className=\"body\">\r\n\r\n                            <div className=\"authors\">\r\n                                {/* מעבר לדף פרטי משתמש ע\"י לחיצה על תמונה של הודעה ראשית */}\r\n                                <NavLink to={`/UserInfo/${topic.Publish_by}`}>\r\n                                    <img src={topic.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#28a745\", fontSize: \"17px\" }}>\r\n                                    {topic.First_name} {topic.Last_name}, {topic.City}</div>\r\n\r\n                                <div className=\"date\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                    Date Publish: <p>{topic.Date_published}</p></div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"content\">\r\n                                {topic.Topic_text}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n\r\n\r\n\r\n                {comments.map(comment =>\r\n                    <div className=\"body\">\r\n\r\n                        <div className=\"authors\">\r\n                            <div className=\"username\">\r\n                                {/* מעבר לדף פרטי משתמש ע\"י לחיצה על תמונה של תגובה  */}\r\n                                <NavLink to={`/UserInfo/${comment.Publish_by}`}>\r\n                                    <img src={comment.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\", fontSize: \"15px\" }}>\r\n                                    {comment.First_name} {comment.Last_name}, {comment.City} </div>\r\n\r\n                                <div className=\"date\">Date Publish: <p>{comment.Date_published}</p></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"content\">\r\n                            {comment.Comment}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n\r\n             \r\n\r\n                <div className=\"comment-area hide\" id=\"comment-area\" >\r\n                    <textarea name=\"comment\" id=\"\" placeholder=\"comment here ... \"\r\n                        value={comment}\r\n                        onChange={(event) => SetComment(event.target.value)}></textarea>\r\n                </div>\r\n\r\n                <Button variant=\"success\" onClick={checkComment}>\r\n                    Send Message\r\n                </Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    else {\r\n        return (\r\n\r\n            <div className=\"formMessage\">\r\n\r\n                {topics.map(topic =>\r\n\r\n                    <div className=\"titlePageMessage\">\r\n                        <p >\r\n                            <NavLink to={`/`}>\r\n                                <img src={require(\"../images/hhh.png\").default}\r\n                                    style={{ margin: \"5px\", paddingBottom: \"4px\" }}\r\n                                    width=\"37\"\r\n                                    height=\"37\"\r\n                                    alt=\"Profile\"\r\n                                />\r\n                            </NavLink>\r\n\r\n                            <NavLink to={`/CommunityPage/${topic.Category_code}`}\r\n                                style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                <a target=\"_blank\">  Community Page {'> '} </a>\r\n                            </NavLink>\r\n\r\n                            Message Page {'> '}\r\n\r\n                            {topic.Topic_title}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"topic-container\">\r\n\r\n                    <div className=\"head\">\r\n\r\n                        <div className=\"authors\">Author</div>\r\n                        <div className=\"content\">Topic: random topic</div>\r\n\r\n                    </div>\r\n\r\n                    {topics.map(topic =>\r\n                        <div className=\"body\">\r\n\r\n                            <div className=\"authors\">\r\n\r\n                                <NavLink to={`/UserInfo/${topic.Publish_by}`}>\r\n                                    <img src={topic.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#28a745\", fontSize: \"14px\" }}>\r\n                                    {topic.First_name} {topic.Last_name}, {topic.City}</div>\r\n\r\n                                <div className=\"date\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                    Date Publish: <p>{topic.Date_published}</p></div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"content\">\r\n                                {topic.Topic_text}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n\r\n\r\n                {comments.map(comment =>\r\n                    <div className=\"body\">\r\n\r\n                        <div className=\"authors\">\r\n                            <div className=\"username\">\r\n                                <NavLink to={`/UserInfo/${comment.Publish_by}`}>\r\n                                    <img src={comment.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\", fontSize: \"14px\" }}>\r\n                                    {comment.First_name} {comment.Last_name}, {comment.City} </div>\r\n\r\n                                <div className=\"date\">Date Publish: <p>{comment.Date_published}</p></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"content\">\r\n                            {comment.Comment}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n\r\n\r\n                <div className=\"connectuser\">\r\n                    <p>You need to <a href=\"/Login\">login</a> or <a href=\"/Register\">register</a> to post a comment.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagePage;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\footer.js",["116","117","118","119","120","121","122","123","124","125","126"],"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport React from 'react';\r\nimport './style_componets/footer.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert'; // popup \r\n\r\n\r\n\r\nconst Footer = () => {\r\n\r\n\tconst history = useHistory()\r\n\r\n\tlet u = JSON.parse(sessionStorage.getItem(\"user\")) //יצירת משתנה מהסאשיין על מנת להציג תמונה של משתמש ספציפי\r\n\r\n\r\n\r\n\r\n\tconst checkProfile = async () => {\r\n\r\n\r\n\t\tif (u == null || u == undefined) {\r\n\t\t\tswal(\"Stop\", \"You need to login first!\", \"warning\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\thistory.push(`/Profile/${u.User_code}`);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tconst checkRegister = async () => { // אם המשתמש מחובר הוא לא יוכל לבצע הרשמה ולהפך\r\n\r\n\r\n\t\tif (u != null || u != undefined) {\r\n\t\t\tswal(\"Stop\", \"You need to Logout first!\", \"warning\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\thistory.push(`/Register`);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tif (u == null || u == undefined) {\r\n\t\treturn (\r\n\t\t\t<div className=\"foot\">\r\n\t\t\t\t<footer className=\"footer-distributed\">\r\n\r\n\t\t\t\t\t<div className=\"footer-left\">\r\n\r\n\t\t\t\t\t\t<Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={require(\"../images/Logo.png\").default}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: 'auto',\r\n\t\t\t\t\t\t\t\t\theight: '58px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<p className=\"footer-company-name\">Made by Artium and Shelly © 2022</p>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className=\"footer-center\">\r\n\r\n\t\t\t\t\t\t<p className=\"footer-links\">\r\n\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"link-1\"><Link to=\"/\"><span>Home</span></Link></a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"link-2\" onClick={checkRegister}><span>Register</span></a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"link-3\" onClick={checkProfile}><span>Profile</span></a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"link-4\"><Link to=\"/Login\"><span>Login</span></Link></a>\r\n\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className=\"footer-right\">\r\n\r\n\t\t\t\t\t\t<p className=\"footer-company-about\">\r\n\t\t\t\t\t\t\t<span>About the forum</span>\r\n\t\t\t\t\t\t\tThis forum deals with a variety of general topics related to everyone's daily lives.\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<div className=\"footer-icons\">\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://www.facebook.com/\" >\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image1\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/f.jpg\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://www.instagram.com\">\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image2\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Instagram.png\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://twitter.com/twitter\">\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image3\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Twitter.png\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://mail.google.com/\">\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image4\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Gmail.png\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\telse {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\"foot\">\r\n\t\t\t\t<footer className=\"footer-distributed\">\r\n\r\n\t\t\t\t\t<div className=\"footer-left\">\r\n\r\n\t\t\t\t\t\t<Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={require(\"../images/Logo.png\").default}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: 'auto',\r\n\t\t\t\t\t\t\t\t\theight: '58px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<p className=\"footer-company-name\">Made by Artium and Shelly © 2022</p>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className=\"footer-center\">\r\n\r\n\t\t\t\t\t\t<p className=\"footer-links\">\r\n\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"link-1\"><Link to=\"/\"><span>Home</span></Link></a>\r\n\r\n\t\t\t\t\t\t\t{/* <a href=\"#\" className=\"link-2\" onClick={checkRegister}><span>Register</span></a> */}\r\n\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"link-3\" onClick={checkProfile}><span>Profile</span></a>\r\n\r\n\t\t\t\t\t\t\t{/* <a href=\"#\" className=\"link-4\"><Link to=\"/Login\"><span>Login</span></Link></a> */}\r\n\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className=\"footer-right\">\r\n\r\n\t\t\t\t\t\t<p className=\"footer-company-about\">\r\n\t\t\t\t\t\t\t<span>About the forum</span>\r\n\t\t\t\t\t\t\tThis forum deals with a variety of general topics related to everyone's daily lives.\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<div className=\"footer-icons\">\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://www.facebook.com/\" >\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image1\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/f.jpg\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://www.instagram.com\">\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image2\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Instagram.png\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://twitter.com/twitter\">\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image3\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Twitter.png\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t<a href=\"https://mail.google.com/\">\r\n\t\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t\t<img class=\"image4\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Gmail.png\").default}\r\n\t\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\CommunityPage.js",["127","128","129","130"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\register.js",["131","132","133","134"],"import { Button, Form, Col, Row } from 'react-bootstrap'\r\nimport { useState } from \"react\";\r\nimport \"../style/register.css\";\r\nimport { API } from '../API';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Register = () => {\r\n  \r\n  // הגדרת משתנים עבור טופס הרשמה\r\n  const history = useHistory()\r\n\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [FirstName, setFirstName] = useState('');\r\n  const [LastName, setLastName] = useState('');\r\n  const [City, setCity] = useState('');\r\n  const [Birthday, setBirthday] = useState('');\r\n  const [Email, setEmail] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [ConfirmPassword, setConfirmPassword] = useState('');\r\n  const [Id, setId] = useState('');\r\n  const [file, setFile] = useState('');\r\n\r\n\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n\r\n    const form = event.currentTarget;\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n\r\n    // === לעומת == גם מתייחס לסוג המשתנים ולא רק לערך שלהם כמו ב ==\r\n    if (Password === ConfirmPassword && Password.length >= 8 && Password.length <= 12) { //אם הסיסמאות זהות ניתן להירשם\r\n      setValidated(true);\r\n      uploadImage();\r\n      swal(\"You have successfully registered!\", \"\", \"success\");\r\n      history.push(`/Login`);\r\n    }\r\n\r\n    if (Password === ConfirmPassword && Password.length < 8 || Password.length > 12) { //אם הסיסמאות זהות ניתן להירשם\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      swal(\"Password length is incorrect! Password length should be between 8 and 12 numbers!\", \"\", \"warning\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (Password != ConfirmPassword ) { //אם הסיסמאות אינן זהות לא ניתן להתחבר \r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      swal(\"Stop\", \"Passwords don't match!\", \"warning\");\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const uploadImage = async () => { //העלאת תמונה\r\n    try {\r\n      const form = new FormData();\r\n      form.append(\"photo\", file); //הוספת קובץ\r\n      let res = await fetch(API.USERS.UPLOAD, {\r\n        method: 'POST',\r\n        body: form\r\n      });\r\n      let data = await res.json()\r\n      if (data.img) {\r\n        registerUser(data.img)\r\n      }\r\n    } catch (error) {\r\n      swal(error, \"\", \"error\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const registerUser = async (img) => { //פונקציה להרשמה של משתמש\r\n    try {\r\n      let user = {\r\n        FirstName,\r\n        LastName,\r\n        City,\r\n        Birthday,\r\n        Email,\r\n        Password,\r\n        Id,\r\n        UserTypeCode: 1,\r\n        ConfirmPassword,\r\n        Photo: img\r\n      }\r\n      console.log(user)\r\n      let res = await fetch(API.USERS.ADD, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n      });\r\n      // let data = await res.json();\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      swal(error, \"\", \"error\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"reg\">\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit} >\r\n\r\n        <div className=\"titlePageRegister\">\r\n          <p>Another moment and you are with us 😃</p>\r\n        </div>\r\n\r\n        <Row className=\"mb-3\">\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              value={FirstName}\r\n              onChange={(event) => setFirstName(event.target.value)}\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              value={LastName}\r\n              onChange={(event) => setLastName(event.target.value)}\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom03\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control type=\"text\"\r\n              placeholder=\"City\"\r\n              value={City}\r\n              onChange={(event) => setCity(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n            <Form.Label>Birthday</Form.Label>\r\n            <Form.Control\r\n              placeholder=\"Birthday\"\r\n              value={Birthday}\r\n              type=\"date\"\r\n              onChange={(event) => setBirthday(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid state.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom05\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={Email}\r\n              onChange={(event) => setEmail(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\"\r\n              value={Password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label> Confirm password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Confirm password\"\r\n              value={ConfirmPassword}\r\n              onChange={(event) => setConfirmPassword(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Id</Form.Label>\r\n            <Form.Control type=\"number\" placeholder=\"Id\"\r\n              value={Id}\r\n              onChange={(event) => setId(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"4\" className=\"mb-3\" controlId=\"validationCustom05\">\r\n            <br></br>\r\n            <Form.Control\r\n              type=\"file\"\r\n              onChange={(event) => setFile(event.target.files[0])}\r\n              required\r\n            />\r\n            <br></br>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n            feedbackType=\"invalid\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <div className=\"sub\">\r\n          <Button type=\"submit\">Submit form</Button>\r\n        </div>\r\n\r\n      </Form>\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\nexport default Register;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateTopic.js",["135","136","137"],"import { Button } from 'react-bootstrap'\r\nimport '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst UpdateTopic = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [TopicTitle, setTopicTitle] = useState('');\r\n    const [TopicText, setTopicText] = useState('');\r\n\r\n    const [topics, SetTopic] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    let Serial_code = id;\r\n\r\n\r\n    // פונקציה האחראית על הצגת האשכולים ע\"י הקוד הסידורי של כל אשכול\r\n    const LoadTopic = async () => {\r\n\r\n        let res = await fetch(`${API.TOPICS.GET}/${Serial_code}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetTopic(data);\r\n    }\r\n\r\n\r\n\r\n\r\n    const checkUpdateTopics = async (CategoryCode) => {\r\n\r\n        if (TopicTitle == '' || TopicText == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        else {\r\n            updateTopic(CategoryCode);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // פונקציה האחראית על עדכון פרטי אשכול\r\n    const updateTopic = async (CategoryCode) => {\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        try {\r\n            let Publish_by = userData.User_code;\r\n            let d = new Date();\r\n\r\n            let user = {\r\n                Category_code: CategoryCode,\r\n                Publish_by,\r\n                TopicTitle,\r\n                TopicText,\r\n                DatePublished: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`,\r\n            }\r\n\r\n            let res = await fetch(`${API.TOPICS.GET}/update/${Serial_code}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n\r\n            let data = await res.json()\r\n            swal(\"You have successfully updated your details!\", \"\", \"success\");\r\n\r\n            history.push(`/Profile/${data.User_code}`);\r\n\r\n\r\n            console.log(data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadTopic();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        topics.map(topic =>\r\n\r\n            <div className=\"box\">\r\n\r\n                <div className=\"AddTopicPop\">\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Topic Title :</label><br />\r\n                    <input type=\"text\"\r\n                        required\r\n                        placeholder={topic.Topic_title}\r\n                        value={TopicTitle}\r\n                        onChange={(event) => setTopicTitle(event.target.value)}\r\n                    />\r\n\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Write Post :</label><br />\r\n                    <textarea type=\"text\"\r\n                        required\r\n                        placeholder={topic.Topic_text}\r\n                        value={TopicText}\r\n                        onChange={(event) => setTopicText(event.target.value)}\r\n\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                    <Button variant=\"success\" type=\"addTopic\" onClick={() => checkUpdateTopics(topic.Category_code)}>\r\n                        Update Topic\r\n                    </Button>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default UpdateTopic;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateUser.js",["138","139","140","141","142","143"],"import { Button, Form, Col, Row } from 'react-bootstrap'\r\nimport '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n// עדכון פרטי משתמש בדף אדמין בלבד\r\nconst UpdateUser = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [FirstName, setFirstName] = useState('');\r\n    const [LastName, setLastName] = useState('');\r\n    const [City, setCity] = useState('');\r\n    const [Birthday, setBirthday] = useState('');\r\n    const [Email, setEmail] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const [ConfirmPassword, setConfirmPassword] = useState('');\r\n    const [Id, setId] = useState('');\r\n\r\n    const [users, SetUser] = useState([]);\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n\r\n\r\n\r\n    const LoadUser = async () => {\r\n\r\n        let res = await fetch(`${API.USERS.GET}/${id}`, { method: 'GET' });\r\n\r\n        let data = await res.json();\r\n        SetUser(data);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // טיפול בשגיאות בנסיון לשנות לסיסמא חדשה\r\n    const checkPasswordInput = async () => {\r\n\r\n        if (Password == '' || ConfirmPassword == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length >= 8 && Password.length <= 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"You have successfully update your password!\", \"\", \"success\");\r\n            updateUser();\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length < 8 || Password.length > 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"Password length is incorrect! Password length should be between 8 and 12 numbers!\", \"\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (Password != ConfirmPassword) { //אם הסיסמאות אינן זהות לא ניתן להתחבר \r\n            swal(\"Stop\", \"Passwords don't match!\", \"warning\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const updateUser = async () => {\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        try {\r\n            let d = new Date(Birthday);\r\n\r\n            let user = {\r\n                First_name: FirstName,\r\n                Last_name: LastName,\r\n                City,\r\n                Birthday: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`,\r\n                Email,\r\n                User_password: Password,\r\n                Id,\r\n                UserType_code: 1,\r\n                Photo: null,\r\n                Confirm_password: ConfirmPassword\r\n            }\r\n\r\n            let res = await fetch(`${API.USERS.GET}/update/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            let data = await res.json()\r\n            swal(\"You have successfully updated user details!\", \"\", \"success\");\r\n            console.log(data)\r\n\r\n\r\n            history.push(`/Admin/${userData.User_code}`); // לאחר העדכון חזרה לדף אדמין\r\n            window.location.reload(false); // רענון דף\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n\r\n        e.preventDefault(); // אירועים לא פועלים בו זמנית-אירוע סינתטי\r\n        checkPasswordInput();\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadUser();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        users.map(user =>\r\n\r\n            <div className=\"reg\">\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n\r\n\r\n                <Form onSubmit={handleFormSubmit}>\r\n\r\n\r\n                    <Row className=\"mb-3\">\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                            <Form.Label>First name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder={user.First_name}\r\n                                value={FirstName}\r\n                                onChange={(event) => setFirstName(event.target.value)}\r\n                            />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder={user.Last_name}\r\n                                value={LastName}\r\n                                onChange={(event) => setLastName(event.target.value)}\r\n                            />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom03\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder={user.City}\r\n                                value={City}\r\n                                onChange={(event) => setCity(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid city.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n                            <Form.Label>Birthday</Form.Label>\r\n                            <Form.Control\r\n                                placeholder={user.Birthday}\r\n                                value={Birthday}\r\n                                type=\"date\"\r\n                                onChange={(event) => setBirthday(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid state.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom05\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\"\r\n                                placeholder={user.Email}\r\n                                value={Email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder={user.User_password}\r\n                                value={Password}\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                            <Form.Label> Confirm password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder={user.Confirm_password}\r\n                                value={ConfirmPassword}\r\n                                onChange={(event) => setConfirmPassword(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                            <Form.Label>Id</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder={user.Id}\r\n                                value={Id}\r\n                                onChange={(event) => setId(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n\r\n                    <Button variant=\"success\" >\r\n                        Update User\r\n                    </Button>\r\n\r\n                </Form>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default UpdateUser;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateCategory.js",["144","145"],"import { Button, Form } from 'react-bootstrap'\r\nimport '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst UpdateCategory = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [NameCategory, setNameCategory] = useState('');\r\n    const [file, setFile] = useState('');\r\n\r\n    const [categories, SetCategory] = useState([])\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    // הצגה של ערכי הנתונים הקודמים בשדות של עדכון קטגוריה\r\n    const LoadCategory = async () => {\r\n\r\n        let res = await fetch(`${API.CATEGORIES.GET}/${id}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetCategory(data);\r\n    }\r\n\r\n\r\n\r\n    const checkUpdateCategoryFiled = async () => {\r\n\r\n        if (NameCategory == '' || !file) {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        else {\r\n            uploadImage();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const uploadImage = async () => {\r\n        try {\r\n            const form = new FormData();\r\n            form.append(\"photo\", file);\r\n            let res = await fetch(API.CATEGORIES.UPLOAD, {\r\n                method: 'POST',\r\n                body: form\r\n            });\r\n            let data = await res.json()\r\n            if (data.img) {\r\n                updateCategory(data.img);\r\n            }\r\n        } catch (error) {\r\n            swal(error, \"\", \"error\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //Update Function\r\n    const updateCategory = async (img) => {\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        try {\r\n\r\n            let user = {\r\n                Name_category: NameCategory,\r\n                Photo: img\r\n            }\r\n\r\n            let res = await fetch(`${API.CATEGORIES.GET}/update/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            let data = await res.json()\r\n            console.log(data)\r\n\r\n            swal(\"You have successfully updated category!\", \"\", \"success\");\r\n            history.push(`/Admin/${userData.User_code}`);\r\n            window.location.reload(false); // רענון דף\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadCategory();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        categories.map(category =>\r\n\r\n            <div className=\"box\">\r\n\r\n                <div className=\"AddTopicPop\">\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Category Name :</label><br />\r\n                    <input type=\"text\"\r\n                        required\r\n                        placeholder={category.Name_category}\r\n                        value={NameCategory}\r\n                        onChange={(event) => setNameCategory(event.target.value)}\r\n                    />\r\n\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Category Image :</label><br />\r\n                    <Form.Control type=\"file\" onChange={(event) => setFile(event.target.files[0])} />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                    <Button variant=\"success\" type=\"addTopic\" onClick={() => checkUpdateCategoryFiled()}>\r\n                        Update Category\r\n                    </Button>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    );\r\n}\r\n\r\nexport default UpdateCategory;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\admin.js",["146","147","148","149","150","151","152","153","154","155","156","157","158"],"import '../style/admin.css';\r\nimport { Button, Form, Tab, Tabs, Table } from 'react-bootstrap'\r\nimport { API } from '../API';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst Admin = () => {\r\n\r\n  let history = useHistory();\r\n\r\n  // הוספת קטגוריה רק מהאדמין\r\n  const [NameCategory, setNameCategory] = useState('');\r\n  const [Photo, setPhoto] = useState('');\r\n\r\n  //הצגת משתנים בדף אדמין\r\n  const [users, SetUsers] = useState([])\r\n  const [catergories, setCatergories] = useState([]);\r\n  const [topics, setTopics] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const [showDeletedUsers, setDeletedUsers] = useState([]);\r\n  const [showDeletedCategories, setDeletedCategories] = useState([]);\r\n  const [showDeletedTopics, setDeletedTopics] = useState([]);\r\n  const [showDeletedComments, setDeletedComments] = useState([]);\r\n\r\n\r\n  let iUsers = 1;\r\n  let iCatergories = 1;\r\n  let iTopics = 1;\r\n  let iComments = 1;\r\n\r\n\r\n\r\n\r\n\r\n  const LoadUsers = async () => {\r\n\r\n    let res = await fetch(API.USERS.GET, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    SetUsers(data);\r\n  }\r\n\r\n\r\n\r\n\r\n  const LoadCatergories = async () => {\r\n\r\n    let res = await fetch(API.CATEGORIES.GET, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    setCatergories(data);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const LoadTopics = async () => {\r\n\r\n    let res = await fetch(API.TOPICS.GET, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    setTopics(data);\r\n  }\r\n\r\n\r\n\r\n\r\n  const LoadComments = async () => {\r\n\r\n    let res = await fetch(API.COMMENTS.GET, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    setComments(data);\r\n  }\r\n\r\n\r\n\r\n\r\n  const LoadDeletedUsers = async () => {\r\n\r\n    let res = await fetch(API.USERS.SHOW, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    setDeletedUsers(data);\r\n  }\r\n\r\n\r\n\r\n  const LoadDeletedCategories = async () => {\r\n\r\n    let res = await fetch(API.CATEGORIES.SHOW, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    setDeletedCategories(data);\r\n  }\r\n\r\n\r\n\r\n\r\n  const LoadDeletedTopics = async () => {\r\n\r\n    let res = await fetch(API.TOPICS.SHOW, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    setDeletedTopics(data);\r\n  }\r\n\r\n\r\n\r\n\r\n  const LoadDeletedComments = async () => {\r\n\r\n    let res = await fetch(API.COMMENTS.SHOW, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    setDeletedComments(data);\r\n  }\r\n\r\n\r\n\r\n\r\n  //Delete Functions\r\n  const DeleteUser = async (Id) => {\r\n\r\n    let res = await fetch(`${API.USERS.GET}/delete/${Id}`, { method: 'DELETE' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n  const DeleteCategory = async (Id) => {\r\n\r\n    let res = await fetch(`${API.CATEGORIES.GET}/delete/${Id}`, { method: 'DELETE' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n  const DeleteTopic = async (Id) => {\r\n\r\n    let res = await fetch(`${API.TOPICS.GET}/delete/${Id}`, { method: 'DELETE' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n  const DeleteComment = async (Id) => {\r\n\r\n    let res = await fetch(`${API.COMMENTS.GET}/delete/${Id}`, { method: 'DELETE' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n\r\n  const ToUpdateUserPage = async (x) => {\r\n    history.push(`/UpdateUser/${x}`);\r\n  }\r\n\r\n\r\n\r\n  const ToUpdateCategoryPage = async (x) => {\r\n    history.push(`/UpdateCategory/${x}`);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //Reactivate Functions\r\n  const ReactivateUser = async (Id) => {\r\n\r\n    let res = await fetch(`${API.USERS.GET}/reactivate/${Id}`, { method: 'PUT' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n  const ReactivateCategories = async (Id) => {\r\n\r\n    let res = await fetch(`${API.CATEGORIES.GET}/reactivate/${Id}`, { method: 'PUT' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n  \r\n  const ReactivateTopics = async (Id) => {\r\n\r\n    let res = await fetch(`${API.TOPICS.GET}/reactivate/${Id}`, { method: 'PUT' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n  const ReactivateComments = async (Id) => {\r\n\r\n    let res = await fetch(`${API.COMMENTS.GET}/reactivate/${Id}`, { method: 'PUT' });\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // התנתקות משתמש אדמין\r\n  const logout = (event) => {\r\n    sessionStorage.clear();\r\n    history.push(\"/\");\r\n    window.location.reload(false); // רענון דף\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    LoadUsers();\r\n    LoadCatergories();\r\n    LoadTopics();\r\n    LoadComments();\r\n    LoadDeletedUsers();\r\n    LoadDeletedCategories();\r\n    LoadDeletedTopics();\r\n    LoadDeletedComments();\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const checkAddCategoryFiled = async () => {\r\n\r\n    if (NameCategory == '' || !Photo) {\r\n      swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    else {\r\n      uploadImage();\r\n      swal(\"Successfully added a category!\", \"\", \"success\");\r\n      window.location.reload(false); // רענון דף\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const uploadImage = async () => {\r\n    try {\r\n      const form = new FormData();\r\n      form.append(\"photo\", Photo);\r\n      let res = await fetch(API.CATEGORIES.UPLOAD, {\r\n        method: 'POST',\r\n        body: form\r\n      });\r\n      let data = await res.json()\r\n      if (data.img) {\r\n        addCategoryAdmin(data.img)\r\n      }\r\n    } catch (error) {\r\n      swal(error, \"\", \"error\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const addCategoryAdmin = async (img) => {\r\n    try {\r\n      let user = {\r\n        Name_category: NameCategory,\r\n        Photo: img\r\n      }\r\n      let res = await fetch(API.CATEGORIES.ADD, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n      });\r\n      let data = await res.json()\r\n      console.log(data)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"reg\">\r\n\r\n      <div className=\"titlePage\">\r\n        <p>Admin Page</p>\r\n        <Button variant=\"danger\" size=\"sm\" onClick={logout}>Log out</Button>\r\n      </div>\r\n\r\n\r\n      <Tabs defaultActiveKey=\"Users\" transition={false} id=\"noanim-tab-example\">\r\n\r\n\r\n        <Tab eventKey=\"Users\" title=\"Users\" className='userss'>\r\n          <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: \"19px\" }}>#</th>\r\n                <th style={{ width: \"80px\" }}>Photo</th>\r\n                <th style={{ width: \"10px\" }}>User Type code</th>\r\n                <th style={{ width: \"10px\" }}>User code</th>\r\n                <th style={{ width: \"70px\" }}>First Name</th>\r\n                <th style={{ width: \"70px\" }}>Last Name</th>\r\n                <th style={{ width: \"100px\" }}>Birthday</th>\r\n                <th style={{ width: \"70px\" }}>City</th>\r\n                <th style={{ width: \"80px\" }}>Id</th>\r\n                <th style={{ width: \"110px\" }}>Email</th>\r\n                <th style={{ width: \"110px\" }}>Password</th>\r\n                <th style={{ width: \"70px\" }}></th>\r\n                <th style={{ width: \"50px\" }}></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {users.map(user =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iUsers++}</td>\r\n                  <td><img src={user.Photo} height=\"60px\" width=\"60px\"></img></td>\r\n                  <td>{user.UserType_code}</td>\r\n                  <td>{user.User_code}</td>\r\n                  <td>{user.First_name}</td>\r\n                  <td>{user.Last_name}</td>\r\n                  <td>{user.Birthday}</td>\r\n                  <td>{user.City}</td>\r\n                  <td>{user.Id}</td>\r\n                  <td>{user.Email}</td>\r\n                  <td>{user.User_password}</td>\r\n                  <td><Button variant=\"primary\" size=\"sm\" onClick={() => ToUpdateUserPage(user.User_code)}>Update</Button>{' '}</td>\r\n                  <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteUser(user.User_code)}>Delete</Button></td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n\r\n            {showDeletedUsers.map(user =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iUsers++}</td>\r\n                  <td><img src={user.Photo} height=\"60px\" width=\"120px\"></img></td>\r\n                  <td>{user.UserType_code}</td>\r\n                  <td>{user.User_code}</td>\r\n                  <td>{user.First_name}</td>\r\n                  <td>{user.Last_name}</td>\r\n                  <td>{user.Birthday}</td>\r\n                  <td>{user.City}</td>\r\n                  <td>{user.Id}</td>\r\n                  <td>{user.Email}</td>\r\n                  <td>{user.User_password}</td>\r\n                  <td></td>\r\n                  <td><Button variant=\"success\" size=\"sm\" onClick={() => ReactivateUser(user.User_code)}>Reactivate</Button></td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n          <p className=\"userType\">* User Type code :<br />1 - Regular user <br />2 - Admin</p>\r\n        </Tab>\r\n\r\n\r\n\r\n        <Tab eventKey=\"Catergories\" title=\"Catergories\" className='catergoriess'>\r\n          <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\", marginBottom: \"50px\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: \"19px\" }}>#</th>\r\n                <th style={{ width: \"40px\" }}>Category photo</th>\r\n                <th style={{ width: \"40px\" }}>Serial code</th>\r\n                <th style={{ width: \"40px\" }}>Name category</th>\r\n                <th style={{ width: \"40px\" }}></th>\r\n                <th style={{ width: \"40px\" }}></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {catergories.map(category =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iCatergories++}</td>\r\n                  <td><img src={category.Photo} height=\"60px\" width=\"120px\"></img></td>\r\n                  <td>{category.Serial_code}</td>\r\n                  <td>{category.Name_category}</td>\r\n\r\n                  <td><Button variant=\"primary\" size=\"sm\" onClick={() => ToUpdateCategoryPage(category.Serial_code)}>Update</Button></td>\r\n                  <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteCategory(category.Serial_code)}>Delete</Button></td>\r\n                </tr>\r\n\r\n\r\n\r\n              </tbody>\r\n            )}\r\n\r\n\r\n\r\n            {showDeletedCategories.map(category =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iCatergories++}</td>\r\n                  <td><img src={category.Photo} height=\"60px\" width=\"120px\"></img></td>\r\n                  <td>{category.Serial_code}</td>\r\n                  <td>{category.Name_category}</td>\r\n                  <td></td>\r\n                  <td><Button variant=\"success\" size=\"sm\" onClick={() => ReactivateCategories(category.Serial_code)}>Reactivate</Button></td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n        </Tab>\r\n\r\n\r\n        <Tab eventKey=\"Topics\" title=\"Topics\" className='topicss'>\r\n          <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\", marginBottom: \"176px\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: \"19px\" }}>#</th>\r\n                <th style={{ width: \"30px\" }}>Serial code</th>\r\n                <th style={{ width: \"30px\" }}>Category code</th>\r\n                <th style={{ width: \"50px\" }}>Topic title</th>\r\n                <th style={{ width: \"210px\" }}>Topic text</th>\r\n                <th style={{ width: \"70px\" }}>Date published</th>\r\n                <th style={{ width: \"70px\" }}>Publish by-user code</th>\r\n                <th style={{ width: \"10px\" }}></th>\r\n                <th style={{ width: \"10px\" }}></th>\r\n\r\n              </tr>\r\n            </thead>\r\n\r\n            {topics.map(topic =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iTopics++}</td>\r\n                  <td>{topic.Serial_code}</td>\r\n                  <td>{topic.Category_code}</td>\r\n                  <td>{topic.Topic_title}</td>\r\n                  <td>{topic.Topic_text}</td>\r\n                  <td>{topic.Date_published}</td>\r\n                  <td>{topic.Publish_by}</td>\r\n\r\n                  <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteTopic(topic.Serial_code)}>Delete</Button></td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n\r\n\r\n\r\n            {showDeletedTopics.map(topic =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iTopics++}</td>\r\n                  <td>{topic.Serial_code}</td>\r\n                  <td>{topic.Category_code}</td>\r\n                  <td>{topic.Topic_title}</td>\r\n                  <td>{topic.Topic_text}</td>\r\n                  <td>{topic.Date_published}</td>\r\n                  <td>{topic.Publish_by}</td>\r\n                  <td></td>\r\n                  <td><Button variant=\"success\" size=\"sm\" onClick={() => ReactivateTopics(topic.Serial_code)}>Reactivate</Button></td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n\r\n          </Table>\r\n        </Tab>\r\n\r\n\r\n\r\n\r\n        <Tab eventKey=\"Comments\" title=\"Comments\" className='commentss'>\r\n          <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\", marginBottom: \"270px\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ width: \"19px\" }}>#</th>\r\n                <th style={{ width: \"30px\" }}>Serial code</th>\r\n                <th style={{ width: \"20px\" }}>Topic number</th>\r\n                <th style={{ width: \"230px\" }}>Comment</th>\r\n                <th style={{ width: \"60px\" }}>Publish by-user code</th>\r\n                <th style={{ width: \"10px\" }}></th>\r\n                <th style={{ width: \"10px\" }}></th>\r\n\r\n              </tr>\r\n            </thead>\r\n\r\n            {comments.map(comment =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iComments++}</td>\r\n                  <td>{comment.Serial_code}</td>\r\n                  <td>{comment.Topic_number}</td>\r\n                  <td>{comment.Comment}</td>\r\n                  <td>{comment.Publish_by}</td>\r\n                  <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteComment(comment.Serial_code)}>Delete</Button></td>\r\n                  <td></td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n\r\n\r\n            {showDeletedComments.map(comment =>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{iComments++}</td>\r\n                  <td>{comment.Serial_code}</td>\r\n                  <td>{comment.Topic_number}</td>\r\n                  <td>{comment.Comment}</td>\r\n                  <td>{comment.Publish_by}</td>\r\n                  <td></td>\r\n                  <td><Button variant=\"success\" size=\"sm\" onClick={() => ReactivateComments(comment.Serial_code)}>Reactivate</Button></td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n        </Tab>\r\n\r\n\r\n\r\n\r\n        <Tab eventKey=\"Add Category\" title=\"Add Category\" style={{ marginBottom: \"220px\" }}>\r\n\r\n          <div className=\"box\">\r\n\r\n            <div className=\"AddTopicPop\">\r\n              <br></br>\r\n              <br></br>\r\n\r\n\r\n              <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Category Name :</label><br />\r\n              <input type=\"text\"\r\n                required\r\n                placeholder=\"Name Category\"\r\n                value={NameCategory}\r\n                onChange={(event) => setNameCategory(event.target.value)}\r\n              />\r\n\r\n              <br></br>\r\n\r\n              <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Category Image :</label><br />\r\n              <Form.Control\r\n                type=\"file\"\r\n                onChange={(event) => setPhoto(event.target.files[0])}\r\n              />\r\n\r\n              <br></br>\r\n              <br></br>\r\n\r\n\r\n\r\n              <Button variant=\"success\" type=\"addTopic\" onClick={() => checkAddCategoryFiled()}>\r\n                Add Category\r\n              </Button>\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Admin;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateNewPassword.js",["159","160","161","162","163","164"],"import { Button } from 'react-bootstrap'\r\nimport '../style/updatePasswordPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst UpdateNewPassword = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [Password, setPassword] = useState('');\r\n    const [ConfirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [users, SetUsers] = useState([])\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n\r\n    // כדי להציג את שם המשתמש בכותרת\r\n    const LoadInfo = async () => {\r\n\r\n        let res = await fetch(`${API.USERS.GET}/${id}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetUsers(data);\r\n    }\r\n\r\n\r\n\r\n       // טיפול בשגיאות בנסיון לשנות לסיסמא חדשה\r\n       const checkPasswordInput = async () => {\r\n\r\n        if (Password == '' || ConfirmPassword == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length >= 8 && Password.length <= 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"You have successfully update your password!\", \"\", \"success\");\r\n            updatePassword();\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length < 8 || Password.length > 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"Password length is incorrect! Password length should be between 8 and 12 numbers!\", \"\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (Password != ConfirmPassword) { //אם הסיסמאות אינן זהות לא ניתן להתחבר \r\n            swal(\"Stop\", \"Passwords don't match!\", \"warning\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // פונקציה האחראית על עדכון סיסמא ישנה שהמשתמש שכח לסיסמא חדשה\r\n    const updatePassword = async () => {\r\n\r\n        try {\r\n\r\n            let user = {\r\n                User_password: Password,\r\n                Confirm_password: ConfirmPassword\r\n            }\r\n\r\n            let res = await fetch(`${API.USERS.GET}/updatePassword/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            let data = await res.json()\r\n            console.log(data)\r\n\r\n\r\n            swal(\"You have successfully updated your password!\", \"\", \"success\");\r\n            history.push(`/`);\r\n            window.location.reload(false); // רענון דף\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadInfo();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        users.map(user =>\r\n\r\n            <div className=\"box\">\r\n\r\n                <div className=\"AddTopicPop\">\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <div className=\"titlePageUpdatePassword\">\r\n                        <p>Hi {user.First_name} update your password</p>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>New Password :</label><br />\r\n                    <input type=\"password\"\r\n                        required\r\n                        value={Password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Confirm New Password :</label><br />\r\n                    <input type=\"password\"\r\n                        required\r\n                        value={ConfirmPassword}\r\n                        onChange={(event) => setConfirmPassword(event.target.value)}\r\n\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                    <Button variant=\"success\" type=\"addTopic\" onClick={() => checkPasswordInput()}>\r\n                        Update Password\r\n                    </Button>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default UpdateNewPassword;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\profile.js",["165","166","167","168","169","170","171","172","173","174","175","176","177"],"import '../style/profile.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button, Form, Col, Row, Tab, Tabs, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [user, SetUser] = useState({})\r\n\r\n    // for popup add topic close or open window\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const [FirstName, setFirstName] = useState('');\r\n    const [LastName, setLastName] = useState('');\r\n    const [City, setCity] = useState('');\r\n    const [Birthday, setBirthday] = useState('');\r\n    const [Email, setEmail] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const [ConfirmPassword, setConfirmPassword] = useState('');\r\n    const [Id, setId] = useState('');\r\n    const [file, setFile] = useState('');\r\n\r\n    \r\n\r\n    //הצגת אשכולים ותגובות לכל משתמש ספציפי\r\n    const [topics, setTopics] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n\r\n    let iTopics = 1;\r\n    let iComments = 1;\r\n\r\n\r\n\r\n    const LoadSpecificUser = async () => {\r\n\r\n        let u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n        if (u == null || u == undefined) {\r\n            history.push(\"/Login\");\r\n        }\r\n        else {\r\n            SetUser(u);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const LoadTopics = async () => {\r\n\r\n        let u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n        if (u == null || u == undefined) {\r\n            setTopics(\"\")\r\n        }\r\n\r\n        else {\r\n            let res = await fetch(`${API.TOPICS.GET}/${u.User_code}/showTopicsUser`, { method: 'GET' });\r\n            let data = await res.json();\r\n\r\n            setTopics(data);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const LoadComments = async () => {\r\n\r\n        let u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n        if (u == null || u == undefined) {\r\n            setTopics(\"\")\r\n        }\r\n\r\n        else {\r\n            let res = await fetch(`${API.COMMENTS.GET}/${u.User_code}/showCommentsUser`, { method: 'GET' });\r\n            let data = await res.json();\r\n\r\n            setComments(data);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n\r\n    // טיפול בשגיאות בנסיון לשנות לסיסמא חדשה\r\n    const checkPasswordInput = async () => {\r\n\r\n        if (Password == '' || ConfirmPassword == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length >= 8 && Password.length <= 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"You have successfully update your password!\", \"\", \"success\");\r\n            uploadImage(user.User_code);\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length < 8 || Password.length > 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"Password length is incorrect! Password length should be between 8 and 12 numbers!\", \"\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (Password != ConfirmPassword) { //אם הסיסמאות אינן זהות לא ניתן להתחבר \r\n            swal(\"Stop\", \"Passwords don't match!\", \"warning\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // משפיע על השדות בתהליך העדכון של פרטי המשתמש בפרופיל\r\n    const handleFormSubmit = (e) => {\r\n\r\n        e.preventDefault(); //אירועים לא פועלים בו זמנית - אירוע סינתטי\r\n        checkPasswordInput();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const uploadImage = async (x) => {\r\n        try {\r\n            const form = new FormData();\r\n            form.append(\"photo\", file);\r\n            let res = await fetch(API.USERS.UPLOAD, {\r\n                method: 'POST',\r\n                body: form\r\n            });\r\n            let data = await res.json()\r\n            if (data.img) {\r\n                UpdateProfileUser(x, data.img)\r\n            }\r\n        } catch (error) {\r\n            swal(error, \"\", \"error\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //Update Functions\r\n    const UpdateProfileUser = async (x, img) => { // עדכון פרטי משתמש\r\n\r\n        try {\r\n            let d = new Date(Birthday);\r\n\r\n            let user = {\r\n                First_name: FirstName,\r\n                Last_name: LastName,\r\n                City,\r\n                Birthday: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`,\r\n                Email,\r\n                User_password: Password,\r\n                Id,\r\n                UserType_code: 1,\r\n                Photo: img,\r\n                Confirm_password: ConfirmPassword\r\n            }\r\n\r\n            let res = await fetch(`${API.USERS.GET}/update/${x}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            let data = await res.json()\r\n            swal(\"You have successfully updated user details!\", \"\", \"success\");\r\n            console.log(data)\r\n\r\n            sessionStorage.clear(); //מנתק את המשתמש מהפרופיל לאחר העדכון\r\n\r\n            history.push(\"/\");\r\n            window.location.reload(false); //רענון דף\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //Delete Functions\r\n    const DeleteTopic = async (Id) => { // מחיקת אשכול\r\n\r\n        let res = await fetch(`${API.TOPICS.GET}/delete/${Id}`, { method: 'DELETE' });\r\n        window.location.reload(false); // רענון דף\r\n    }\r\n\r\n\r\n    const DeleteComment = async (Id) => { // מחיקת תגובה\r\n\r\n        let res = await fetch(`${API.COMMENTS.GET}/delete/${Id}`, { method: 'DELETE' });\r\n        window.location.reload(false); // רענון דף\r\n    }\r\n\r\n\r\n\r\n    // התנתקות משתמש \r\n    const clearAll = (event) => {\r\n        sessionStorage.clear();\r\n        history.push(\"/\");\r\n        window.location.reload(false); // רענון דף\r\n    }\r\n\r\n\r\n\r\n    const checkAdmin = async () => {\r\n        history.push(`/Admin/${user.User_code}`);\r\n    }\r\n\r\n\r\n    // מעביר אותנו לדף עדכון אשכול ע\"י מספר אשכול\r\n    const ToUpdateTopicPage = async (x) => {\r\n        history.push(`/UpdateTopic/${x}`);\r\n    }\r\n\r\n\r\n\r\n    const toMessagePage = async (id) => { // מעבר לדף נושא ספציפי מדף פרופיל למטה בטבלה\r\n\r\n          history.push(`/MessagePage/${id}`);\r\n      }\r\n    \r\n\r\n\r\n\r\n    useEffect(() => { //פונקציות הטוענות פרטים ספציפיים - משתמש, אשכול, תגובה \r\n        LoadSpecificUser();\r\n        LoadTopics();\r\n        LoadComments();\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => { //נוצרו על מנת להציג משתנים באינפוטים - בשדות בעדכון פרטי משתמש ספציפי\r\n        setFirstName(user.First_name)\r\n        setLastName(user.Last_name)\r\n        setCity(user.City)\r\n        setBirthday(user.Birthday)\r\n        setEmail(user.Email)\r\n        setPassword(user.User_password)\r\n        setConfirmPassword(user.Confirm_password)\r\n        setId(user.Id)\r\n        setFile(user.Photo)\r\n\r\n    }, [user])\r\n\r\n\r\n\r\n\r\n\r\n    if (user.UserType_code == 2) { //Admin = 2\r\n\r\n        return (\r\n\r\n            <div class=\"main-body\">\r\n\r\n                <div className=\"titlePageProfile\">\r\n                    <p>Welcome To Your Profile Page <span> - Here you can control and see your Info</span></p>\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={clearAll}>Log out</Button>\r\n                </div>\r\n\r\n                <div class=\"row gutters-sm\">\r\n\r\n                    <div class=\"col-md-4 mb-3\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex flex-column align-items-center text-center\">\r\n                                    <img src={user.Photo} alt=\"Admin\" class=\"rounded-circle\" width=\"150\" />\r\n                                    <div class=\"mt-3\">\r\n                                        <h4>Hi {user.First_name}</h4>\r\n                                        <Button className=\"adminBtn\" variant=\"info\" size=\"sm\" onClick={checkAdmin}>To Admin Page</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card mb-3\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">Full Name</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.First_name} {user.Last_name}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">Email</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.Email}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">Birthday</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.Birthday}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">City</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.City}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">User ID</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.Id}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <Button variant=\"info\" size=\"sm\"\r\n                                            onClick={handleShow}\r\n                                            style={{ textDecoration: \"none\", color: \"white\", fontSize: \"16px\" }}>\r\n                                            Edit profile\r\n                                        </Button>\r\n                                    </div>\r\n\r\n                                    <div className=\"popup\">\r\n                                        <Modal\r\n                                            show={show} onHide={handleClose} animation={true} size=\"lg\"\r\n                                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                            centered\r\n                                        >\r\n\r\n                                            <div className=\"titlePageUpd\">\r\n                                                <p>Update Your Profile <span> - {user.First_name} {user.Last_name}</span></p>\r\n                                                <Button variant=\"danger\" size=\"sm\" onClick={handleClose}>X</Button>\r\n                                            </div>\r\n                                            <div className=\"modalPopUp\">\r\n                                                <Form onSubmit={handleFormSubmit}>\r\n\r\n                                                    <Row className=\"mb-3\">\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                                            <Form.Label>First name</Form.Label>\r\n                                                            <Form.Control\r\n                                                                required\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"First name\"\r\n                                                                value={FirstName}\r\n                                                                onChange={(event) => setFirstName(event.target.value)}\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                                                            <Form.Label>Last name</Form.Label>\r\n                                                            <Form.Control\r\n                                                                required\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Last name\"\r\n                                                                value={LastName}\r\n                                                                onChange={(event) => setLastName(event.target.value)}\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                    </Row>\r\n\r\n                                                    <Row className=\"mb-3\">\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom03\">\r\n                                                            <Form.Label>City</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"City\"\r\n                                                                value={City}\r\n                                                                onChange={(event) => setCity(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid city.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n                                                            <Form.Label>Birthday</Form.Label>\r\n                                                            <Form.Control\r\n                                                                placeholder=\"Birthday\"\r\n                                                                value={Birthday}\r\n                                                                type=\"date\"\r\n                                                                onChange={(event) => setBirthday(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid state.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label>Email</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"email\"\r\n                                                                placeholder=\"Email\"\r\n                                                                value={Email}\r\n                                                                onChange={(event) => setEmail(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n                                                    </Row>\r\n\r\n                                                    <Row className=\"mb-3\">\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label>Password</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"password\"\r\n                                                                placeholder=\"Password\"\r\n                                                                value={Password}\r\n                                                                onChange={(event) => setPassword(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label> Confirm password</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"password\"\r\n                                                                placeholder=\"Confirm password\"\r\n                                                                value={ConfirmPassword}\r\n                                                                onChange={(event) => setConfirmPassword(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label>Id</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                placeholder=\"Id\"\r\n                                                                value={Id}\r\n                                                                onChange={(event) => setId(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"4\" className=\"mb-3\">\r\n                                                            <br></br>\r\n                                                            <Form.Control\r\n                                                                type=\"file\"\r\n                                                                onChange={(event) => setFile(event.target.files[0])}\r\n                                                                style={{ background: \"none\", border: \"none\" }}\r\n                                                            />\r\n\r\n                                                        </Form.Group>\r\n                                                    </Row>\r\n\r\n                                                    <Button type=\"submit\" >Update details</Button>\r\n\r\n                                                </Form>\r\n                                            </div>\r\n                                        </Modal>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"titlePageControl\">\r\n                    <p>Control your messages :<br />▼</p>\r\n                </div>\r\n\r\n                <Tabs defaultActiveKey=\"Topics\" transition={false} id=\"noanim-tab-example\">\r\n\r\n                    <Tab eventKey=\"Topics\" title=\"Topics\" className='topics'>\r\n                        <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\" }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: \"19px\" }}>#</th>\r\n                                    {/* <th style={{ width: \"30px\" }}>Serial code</th>\r\n                                    <th style={{ width: \"30px\" }}>Category code</th> */}\r\n                                    <th style={{ width: \"50px\" }}>Topic title</th>\r\n                                    <th style={{ width: \"210px\" }}>Topic text</th>\r\n                                    <th style={{ width: \"70px\" }}>Date published</th>\r\n                                    {/* <th style={{ width: \"70px\" }}>Publish by-user code</th> */}\r\n                                    <th style={{ width: \"10px\" }}></th>\r\n                                    <th style={{ width: \"10px\" }}></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            {topics.map(topic =>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{iTopics++}</td>\r\n                                        {/* <td>{topic.Serial_code}</td>\r\n                                        <td>{topic.Category_code}</td> */}\r\n                                        <td><Link onClick={() => toMessagePage(topic.Serial_code)} style={{ textDecoration: \"none\", color: \"#28a745\", fontWeight: \"bold\" }}>{topic.Topic_title}</Link></td>\r\n                                        <td>{topic.Topic_text}</td>\r\n                                        <td>{topic.Date_published}</td>\r\n                                        {/* <td>{topic.Publish_by}</td> */}\r\n\r\n                                        <td><Button variant=\"primary\" size=\"sm\" onClick={() => ToUpdateTopicPage(topic.Serial_code)}>Update</Button></td>\r\n                                        <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteTopic(topic.Serial_code)}>Delete</Button></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            )}\r\n                        </Table>\r\n                    </Tab>\r\n\r\n\r\n                    <Tab eventKey=\"Comments\" title=\"Comments\" className='commentss'>\r\n                        <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\" }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: \"19px\" }}>#</th>\r\n                                    {/* <th style={{ width: \"30px\" }}>Serial code</th>\r\n                                    <th style={{ width: \"20px\" }}>Topic number</th> */}\r\n                                    <th style={{ width: \"230px\" }}>Comment</th>\r\n                                    {/* <th style={{ width: \"60px\" }}>Publish by-user code</th> */}\r\n                                    <th style={{ width: \"40px\" }}></th>\r\n                                    <th style={{ width: \"30px\" }}></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            {comments.map(comment =>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{iComments++}</td>\r\n                                        {/* <td>{comment.Serial_code}</td>\r\n                                        <td>{comment.Topic_number}</td> */}\r\n                                        <td>{comment.Comment}</td>\r\n                                        {/* <td>{comment.Publish_by}</td> */}\r\n                                        <td></td>\r\n                                        <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteComment(comment.Serial_code)}>Delete</Button></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            )}\r\n                        </Table>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    else { // User = 1\r\n\r\n        return (\r\n\r\n            <div class=\"main-body\">\r\n\r\n                <div className=\"titlePageProfile\">\r\n                    <p>Welcome To Your Profile Page <span> - Here you can control and see your Info</span></p>\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={clearAll}>Log out</Button>\r\n                </div>\r\n\r\n                <div class=\"row gutters-sm\">\r\n                    <div class=\"col-md-4 mb-3\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex flex-column align-items-center text-center\">\r\n                                    <img src={user.Photo} class=\"rounded-circle\" width=\"150\" />\r\n                                    <div class=\"mt-3\">\r\n                                        <h4>Hi {user.First_name}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card mb-3\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">Full Name</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.First_name} {user.Last_name}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">Email</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.Email}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">Birthday</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.Birthday}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">City</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.City}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <h6 class=\"mb-0\">User ID</h6>\r\n                                    </div>\r\n                                    <div class=\"col-sm-9 text-secondary\">\r\n                                        {user.Id}\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <Button variant=\"info\" size=\"sm\"\r\n                                            onClick={handleShow}\r\n                                            style={{ textDecoration: \"none\", color: \"white\", fontSize: \"16px\" }}>\r\n                                            Edit profile\r\n                                        </Button>\r\n                                    </div>\r\n\r\n                                    <div className=\"popup\">\r\n                                        <Modal show={show} onHide={handleClose} animation={true} size=\"lg\"\r\n                                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                            centered\r\n                                        >\r\n                                            <Form onSubmit={handleFormSubmit}>\r\n\r\n                                                <div className=\"titlePageUpd\">\r\n                                                    <p>Update Your Profile <span> - {user.First_name} {user.Last_name}</span></p>\r\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={handleClose}>X</Button>\r\n                                                </div>\r\n\r\n                                                <div className=\"modalPopUp\">\r\n\r\n                                                    <Row className=\"mb-3\">\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                                            <Form.Label>First name</Form.Label>\r\n                                                            <Form.Control\r\n                                                                required\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"First name\"\r\n                                                                value={FirstName}\r\n                                                                onChange={(event) => setFirstName(event.target.value)}\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                                                            <Form.Label>Last name</Form.Label>\r\n                                                            <Form.Control\r\n                                                                required\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Last name\"\r\n                                                                value={LastName}\r\n                                                                onChange={(event) => setLastName(event.target.value)}\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n                                                    </Row>\r\n\r\n                                                    <Row className=\"mb-3\">\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom03\">\r\n                                                            <Form.Label>City</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"City\"\r\n                                                                value={City}\r\n                                                                onChange={(event) => setCity(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid city.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n                                                            <Form.Label>Birthday</Form.Label>\r\n                                                            <Form.Control\r\n                                                                placeholder=\"Birthday\"\r\n                                                                value={Birthday}\r\n                                                                type=\"date\"\r\n                                                                onChange={(event) => setBirthday(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid state.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label>Email</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"email\"\r\n                                                                placeholder=\"Email\"\r\n                                                                value={Email}\r\n                                                                onChange={(event) => setEmail(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n                                                    </Row>\r\n\r\n                                                    <Row className=\"mb-3\">\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label>Password</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"password\"\r\n                                                                placeholder=\"Password\"\r\n                                                                value={Password}\r\n                                                                onChange={(event) => setPassword(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label> Confirm password</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"password\"\r\n                                                                placeholder=\"Confirm password\"\r\n                                                                value={ConfirmPassword}\r\n                                                                onChange={(event) => setConfirmPassword(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                                                            <Form.Label>Id</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                placeholder=\"Id\"\r\n                                                                value={Id}\r\n                                                                onChange={(event) => setId(event.target.value)}\r\n                                                                required\r\n                                                                style={{ background: \"rgba(255, 255, 255, 0.582)\" }}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                Please provide a valid zip.\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group as={Col} md=\"4\" className=\"mb-3\">\r\n                                                            <br></br>\r\n                                                            <Form.Control\r\n                                                                type=\"file\"\r\n\r\n                                                                onChange={(event) => setFile(event.target.files[0])}\r\n                                                                style={{ background: \"none\", border: \"none\" }}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Row>\r\n\r\n                                                    <Button type=\"submit\">Update details</Button>\r\n                                                </div>\r\n                                            </Form>\r\n                                        </Modal>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"titlePageControl\">\r\n                    <p>Control your messages :<br />▼</p>\r\n                </div>\r\n\r\n                <Tabs defaultActiveKey=\"Topics\" transition={false} id=\"noanim-tab-example\">\r\n\r\n\r\n                    <Tab eventKey=\"Topics\" title=\"Topics\" className='topics'>\r\n                        <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\" }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: \"19px\" }}>#</th>\r\n                                    {/* <th style={{ width: \"30px\" }}>Serial code</th> */}\r\n                                    {/* <th style={{ width: \"30px\" }}>Category code</th> */}\r\n                                    <th style={{ width: \"50px\" }}>Topic title</th>\r\n                                    <th style={{ width: \"210px\" }}>Topic text</th>\r\n                                    <th style={{ width: \"70px\" }}>Date published</th>\r\n                                    {/* <th style={{ width: \"70px\" }}>Publish by-user code</th> */}\r\n                                    <th style={{ width: \"10px\" }}></th>\r\n                                    <th style={{ width: \"10px\" }}></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            {topics.map(topic =>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{iTopics++}</td>\r\n                                        {/* <td>{topic.Serial_code}</td> */}\r\n                                        {/* <td>{topic.Category_code}</td> */}\r\n                                        <td><Link onClick={() => toMessagePage(topic.Serial_code)} style={{ textDecoration: \"none\", color: \"#28a745\", fontWeight: \"bold\" }}>{topic.Topic_title}</Link></td>\r\n                                        <td>{topic.Topic_text}</td>\r\n                                        <td>{topic.Date_published}</td>\r\n                                        {/* <td>{topic.Publish_by}</td> */}\r\n                                        <td><Button variant=\"primary\" size=\"sm\" onClick={() => ToUpdateTopicPage(topic.Serial_code)}>Update</Button></td>\r\n                                        <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteTopic(topic.Serial_code)}>Delete</Button></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            )}\r\n                        </Table>\r\n                    </Tab>\r\n\r\n                    <Tab eventKey=\"Comments\" title=\"Comments\" className='commentss'>\r\n                        <Table striped bordered hover size=\"sm\" style={{ fontSize: \"13px\" }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ width: \"19px\" }}>#</th>\r\n                                    {/* <th style={{ width: \"30px\" }}>Serial code</th>\r\n                                    <th style={{ width: \"20px\" }}>Topic number</th> */}\r\n                                    <th style={{ width: \"230px\" }}>Comment</th>\r\n                                    <th style={{ width: \"30px\" }}></th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            {comments.map(comment =>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>{iComments++}</td>\r\n                                        {/* <td>{comment.Serial_code}</td>\r\n                                        <td>{comment.Topic_number}</td> */}\r\n                                        <td>{comment.Comment}</td>\r\n                                        <td><Button variant=\"danger\" size=\"sm\" onClick={() => DeleteComment(comment.Serial_code)}>Delete</Button></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            )}\r\n                        </Table>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\UserInfo.js",["178","179"],"import '../style/profile.css';\r\nimport '../style/infoUser.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst UserInfo = () => {\r\n\r\n    const [users, SetUsers] = useState([])\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    // אחראי על הצגת האינפורמציה לגבי אותו משתמש\r\n    const LoadInfo = async () => {\r\n\r\n        let res = await fetch(`${API.USERS.GET}/${id}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetUsers(data);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadInfo();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        users.map(user =>\r\n\r\n            <div>\r\n\r\n                <div className=\"title_info\">\r\n                    <p>{user.First_name} Details:</p>\r\n                </div>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div className=\"main-body\">\r\n\r\n\r\n                    <div className=\"row gutters-sm\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                        <img src={user.Photo} width=\"200\" />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">Full Name</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.First_name} {user.Last_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">Email</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.Email}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">Birthday</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.Birthday}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">City</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.City}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\API.js",[],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\Config.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":26,"column":24,"nodeType":"186","messageId":"187","endLine":26,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":40,"column":24,"nodeType":"186","messageId":"187","endLine":40,"endColumn":26},{"ruleId":"184","severity":1,"message":"188","line":55,"column":24,"nodeType":"186","messageId":"187","endLine":55,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":75,"column":22,"nodeType":"186","messageId":"187","endLine":75,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":83,"column":15,"nodeType":"191","endLine":85,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":137,"column":15,"nodeType":"191","endLine":139,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":51,"column":15,"nodeType":"186","messageId":"187","endLine":51,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":51,"column":33,"nodeType":"186","messageId":"187","endLine":51,"endColumn":35},{"ruleId":"184","severity":1,"message":"185","line":66,"column":12,"nodeType":"186","messageId":"187","endLine":66,"endColumn":14},{"ruleId":"184","severity":1,"message":"188","line":97,"column":26,"nodeType":"186","messageId":"187","endLine":97,"endColumn":28},{"ruleId":"184","severity":1,"message":"188","line":132,"column":26,"nodeType":"186","messageId":"187","endLine":132,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":139,"column":30,"nodeType":"186","messageId":"187","endLine":139,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":145,"column":30,"nodeType":"186","messageId":"187","endLine":145,"endColumn":32},{"ruleId":"184","severity":1,"message":"188","line":164,"column":24,"nodeType":"186","messageId":"187","endLine":164,"endColumn":26},{"ruleId":"184","severity":1,"message":"188","line":197,"column":26,"nodeType":"186","messageId":"187","endLine":197,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":204,"column":30,"nodeType":"186","messageId":"187","endLine":204,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":250,"column":15,"nodeType":"191","endLine":250,"endColumn":43},{"ruleId":"189","severity":1,"message":"190","line":250,"column":43,"nodeType":"191","endLine":250,"endColumn":116},{"ruleId":"192","severity":1,"message":"194","line":262,"column":13,"nodeType":"191","endLine":264,"endColumn":14},{"ruleId":"192","severity":1,"message":"194","line":278,"column":13,"nodeType":"191","endLine":280,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":48,"column":9,"nodeType":"191","endLine":51,"endColumn":11},{"ruleId":"189","severity":1,"message":"190","line":62,"column":15,"nodeType":"191","endLine":62,"endColumn":43},{"ruleId":"184","severity":1,"message":"185","line":56,"column":21,"nodeType":"186","messageId":"187","endLine":56,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":74,"column":42,"nodeType":"186","messageId":"187","endLine":74,"endColumn":44},{"ruleId":"195","severity":1,"message":"196","line":114,"column":8,"nodeType":"197","endLine":114,"endColumn":10,"suggestions":"198"},{"ruleId":"184","severity":1,"message":"188","line":119,"column":24,"nodeType":"186","messageId":"187","endLine":119,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":140,"column":33,"nodeType":"191","endLine":140,"endColumn":52},{"ruleId":"192","severity":1,"message":"193","line":252,"column":33,"nodeType":"191","endLine":252,"endColumn":52},{"ruleId":"184","severity":1,"message":"185","line":23,"column":22,"nodeType":"186","messageId":"187","endLine":23,"endColumn":24},{"ruleId":"184","severity":1,"message":"188","line":36,"column":22,"nodeType":"186","messageId":"187","endLine":36,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":46,"column":21,"nodeType":"186","messageId":"187","endLine":46,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":54,"column":8,"nodeType":"191","endLine":60,"endColumn":10},{"ruleId":"192","severity":1,"message":"194","line":72,"column":8,"nodeType":"191","endLine":72,"endColumn":39},{"ruleId":"192","severity":1,"message":"194","line":74,"column":8,"nodeType":"191","endLine":74,"endColumn":63},{"ruleId":"192","severity":1,"message":"194","line":76,"column":8,"nodeType":"191","endLine":76,"endColumn":62},{"ruleId":"192","severity":1,"message":"194","line":78,"column":8,"nodeType":"191","endLine":78,"endColumn":39},{"ruleId":"189","severity":1,"message":"190","line":155,"column":8,"nodeType":"191","endLine":161,"endColumn":10},{"ruleId":"192","severity":1,"message":"194","line":173,"column":8,"nodeType":"191","endLine":173,"endColumn":39},{"ruleId":"192","severity":1,"message":"194","line":177,"column":8,"nodeType":"191","endLine":177,"endColumn":62},{"ruleId":"184","severity":1,"message":"185","line":50,"column":24,"nodeType":"186","messageId":"187","endLine":50,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":50,"column":43,"nodeType":"186","messageId":"187","endLine":50,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":67,"column":42,"nodeType":"186","messageId":"187","endLine":67,"endColumn":44},{"ruleId":"195","severity":1,"message":"199","line":120,"column":8,"nodeType":"197","endLine":120,"endColumn":10,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":48,"column":38,"nodeType":"203","messageId":"204","endLine":48,"endColumn":40},{"ruleId":"201","severity":1,"message":"202","line":48,"column":61,"nodeType":"203","messageId":"204","endLine":48,"endColumn":63},{"ruleId":"184","severity":1,"message":"188","line":56,"column":18,"nodeType":"186","messageId":"187","endLine":56,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":102,"column":11,"nodeType":"207","messageId":"208","endLine":102,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":37,"column":24,"nodeType":"186","messageId":"187","endLine":37,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":37,"column":43,"nodeType":"186","messageId":"187","endLine":37,"endColumn":45},{"ruleId":"195","severity":1,"message":"209","line":90,"column":8,"nodeType":"197","endLine":90,"endColumn":10,"suggestions":"210"},{"ruleId":"184","severity":1,"message":"185","line":47,"column":22,"nodeType":"186","messageId":"187","endLine":47,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":47,"column":47,"nodeType":"186","messageId":"187","endLine":47,"endColumn":49},{"ruleId":"201","severity":1,"message":"202","line":57,"column":42,"nodeType":"203","messageId":"204","endLine":57,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":57,"column":65,"nodeType":"203","messageId":"204","endLine":57,"endColumn":67},{"ruleId":"184","severity":1,"message":"188","line":63,"column":22,"nodeType":"186","messageId":"187","endLine":63,"endColumn":24},{"ruleId":"195","severity":1,"message":"211","line":121,"column":8,"nodeType":"197","endLine":121,"endColumn":10,"suggestions":"212"},{"ruleId":"184","severity":1,"message":"185","line":37,"column":26,"nodeType":"186","messageId":"187","endLine":37,"endColumn":28},{"ruleId":"195","severity":1,"message":"213","line":111,"column":8,"nodeType":"197","endLine":111,"endColumn":10,"suggestions":"214"},{"ruleId":"205","severity":1,"message":"206","line":130,"column":9,"nodeType":"207","messageId":"208","endLine":130,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":138,"column":9,"nodeType":"207","messageId":"208","endLine":138,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":146,"column":9,"nodeType":"207","messageId":"208","endLine":146,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":154,"column":9,"nodeType":"207","messageId":"208","endLine":154,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":179,"column":9,"nodeType":"207","messageId":"208","endLine":179,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":187,"column":9,"nodeType":"207","messageId":"208","endLine":187,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":195,"column":9,"nodeType":"207","messageId":"208","endLine":195,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":203,"column":9,"nodeType":"207","messageId":"208","endLine":203,"endColumn":12},{"ruleId":"184","severity":1,"message":"185","line":239,"column":22,"nodeType":"186","messageId":"187","endLine":239,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":338,"column":23,"nodeType":"191","endLine":338,"endColumn":72},{"ruleId":"189","severity":1,"message":"190","line":358,"column":23,"nodeType":"191","endLine":358,"endColumn":73},{"ruleId":"189","severity":1,"message":"190","line":396,"column":23,"nodeType":"191","endLine":396,"endColumn":77},{"ruleId":"189","severity":1,"message":"190","line":415,"column":23,"nodeType":"191","endLine":415,"endColumn":77},{"ruleId":"184","severity":1,"message":"185","line":38,"column":22,"nodeType":"186","messageId":"187","endLine":38,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":38,"column":47,"nodeType":"186","messageId":"187","endLine":38,"endColumn":49},{"ruleId":"201","severity":1,"message":"202","line":48,"column":42,"nodeType":"203","messageId":"204","endLine":48,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":48,"column":65,"nodeType":"203","messageId":"204","endLine":48,"endColumn":67},{"ruleId":"184","severity":1,"message":"188","line":54,"column":22,"nodeType":"186","messageId":"187","endLine":54,"endColumn":24},{"ruleId":"195","severity":1,"message":"215","line":100,"column":8,"nodeType":"197","endLine":100,"endColumn":10,"suggestions":"216"},{"ruleId":"184","severity":1,"message":"185","line":48,"column":28,"nodeType":"186","messageId":"187","endLine":48,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":61,"column":28,"nodeType":"186","messageId":"187","endLine":61,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":78,"column":28,"nodeType":"186","messageId":"187","endLine":78,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":100,"column":22,"nodeType":"186","messageId":"187","endLine":100,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":100,"column":47,"nodeType":"186","messageId":"187","endLine":100,"endColumn":49},{"ruleId":"201","severity":1,"message":"202","line":110,"column":42,"nodeType":"203","messageId":"204","endLine":110,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":110,"column":65,"nodeType":"203","messageId":"204","endLine":110,"endColumn":67},{"ruleId":"184","severity":1,"message":"188","line":116,"column":22,"nodeType":"186","messageId":"187","endLine":116,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":201,"column":13,"nodeType":"207","messageId":"208","endLine":201,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":208,"column":13,"nodeType":"207","messageId":"208","endLine":208,"endColumn":16},{"ruleId":"195","severity":1,"message":"217","line":248,"column":8,"nodeType":"197","endLine":248,"endColumn":10,"suggestions":"218"},{"ruleId":"184","severity":1,"message":"185","line":268,"column":28,"nodeType":"186","messageId":"187","endLine":268,"endColumn":30},{"ruleId":"189","severity":1,"message":"190","line":611,"column":37,"nodeType":"191","endLine":611,"endColumn":96},{"ruleId":"195","severity":1,"message":"215","line":29,"column":8,"nodeType":"197","endLine":29,"endColumn":10,"suggestions":"219"},{"ruleId":"189","severity":1,"message":"190","line":58,"column":41,"nodeType":"191","endLine":58,"endColumn":77},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'LoadComments' and 'LoadTopics'. Either include them or remove the dependency array.","ArrayExpression",["222"],"React Hook useEffect has missing dependencies: 'LoadCategory' and 'LoadTopics'. Either include them or remove the dependency array.",["223"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'LoadTopic'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'LoadUser'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'LoadCategory'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'LoadInfo'. Either include it or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'LoadSpecificUser'. Either include it or remove the dependency array.",["228"],["229"],"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"240","fix":"244"},"Update the dependencies array to be: [LoadComments, LoadTopics]",{"range":"245","text":"246"},"Update the dependencies array to be: [LoadCategory, LoadTopics]",{"range":"247","text":"248"},"Update the dependencies array to be: [LoadTopic]",{"range":"249","text":"250"},"Update the dependencies array to be: [LoadUser]",{"range":"251","text":"252"},"Update the dependencies array to be: [LoadCategory]",{"range":"253","text":"254"},"Update the dependencies array to be: [LoadInfo]",{"range":"255","text":"256"},"Update the dependencies array to be: [LoadSpecificUser]",{"range":"257","text":"258"},{"range":"259","text":"256"},[2624,2626],"[LoadComments, LoadTopics]",[3259,3261],"[LoadCategory, LoadTopics]",[2318,2320],"[LoadTopic]",[3529,3531],"[LoadUser]",[2568,2570],"[LoadCategory]",[2711,2713],"[LoadInfo]",[6574,6576],"[LoadSpecificUser]",[598,600]]
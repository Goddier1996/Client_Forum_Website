[{"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\index.js":"1","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\App.js":"2","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\menu.js":"3","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\Login.js":"4","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\home.js":"5","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\MessagePage.js":"6","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\footer.js":"7","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\CommunityPage.js":"8","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\register.js":"9","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateTopic.js":"10","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateUser.js":"11","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateCategory.js":"12","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\admin.js":"13","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateNewPassword.js":"14","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\profile.js":"15","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\UserInfo.js":"16","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\API.js":"17","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\Config.js":"18"},{"size":575,"mtime":1649172756210,"results":"19","hashOfConfig":"20"},{"size":1965,"mtime":1649172747018,"results":"21","hashOfConfig":"20"},{"size":5483,"mtime":1659426543070,"results":"22","hashOfConfig":"20"},{"size":9210,"mtime":1659545239780,"results":"23","hashOfConfig":"20"},{"size":2106,"mtime":1659379474940,"results":"24","hashOfConfig":"20"},{"size":10914,"mtime":1659379997609,"results":"25","hashOfConfig":"20"},{"size":3146,"mtime":1649172686962,"results":"26","hashOfConfig":"20"},{"size":8482,"mtime":1659425810510,"results":"27","hashOfConfig":"20"},{"size":8145,"mtime":1649172652324,"results":"28","hashOfConfig":"20"},{"size":4144,"mtime":1649172661088,"results":"29","hashOfConfig":"20"},{"size":10052,"mtime":1649172615973,"results":"30","hashOfConfig":"20"},{"size":4358,"mtime":1649172648010,"results":"31","hashOfConfig":"20"},{"size":16230,"mtime":1659546629910,"results":"32","hashOfConfig":"20"},{"size":4819,"mtime":1657624605005,"results":"33","hashOfConfig":"20"},{"size":49145,"mtime":1659546203326,"results":"34","hashOfConfig":"20"},{"size":4294,"mtime":1649172604518,"results":"35","hashOfConfig":"20"},{"size":2423,"mtime":1649172750702,"results":"36","hashOfConfig":"20"},{"size":150,"mtime":1659361119527,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1a7708g",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\index.js",[],["86","87"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\App.js",[],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\menu.js",["88","89","90","91","92","93"],"import { useEffect, useState } from 'react';\r\nimport './style_componets/menu.css';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { Nav, Navbar, Button, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst Menu = () => {\r\n\r\n  const [user, SetUser] = useState({})\r\n  const history = useHistory()\r\n\r\n  let u = JSON.parse(sessionStorage.getItem(\"user\")) //יצירת משתנה מהסאשיין על מנת להציג תמונה של משתמש ספציפי\r\n\r\n\r\n\r\n\r\n  const LoadUser = async () => {\r\n\r\n    let u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n    if (u == null || u == undefined) {\r\n      SetUser(\"\");\r\n    }\r\n    else {\r\n      SetUser(u);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const checkProfile = async () => { //אם המשתמש לא מחובר לא יוכל להיכנס לפרופיל ולהפך \r\n\r\n    let u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n    if (u == null || u == undefined) {\r\n      swal(\"Stop\", \"You need to login first!\", \"warning\");\r\n    }\r\n    else {\r\n      history.push(`/Profile/${u.User_code}`);\r\n    }\r\n  }\r\n\r\n\r\n  const checkRegister = async () => { // אם המשתמש מחובר הוא לא יוכל לבצע הרשמה ולהפך\r\n\r\n    let u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n    if (u != null || u != undefined) {\r\n      swal(\"Stop\", \"You need to Logout first!\", \"warning\");\r\n    }\r\n    else {\r\n      history.push(`/Register`);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    LoadUser();\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (u == null || u == undefined) { // אם אין משתמש מחובר מציגים את התמונת ברירת מחדל \r\n    return (\r\n\r\n      <>\r\n        <Navbar style={{ background: \"#f6f5fa\" }} expand=\"lg\">\r\n          <Navbar.Brand className=\"Logo\">\r\n            <Link to=\"/\" >\r\n              <img\r\n                src={require(\"../images/Logo.png\").default}\r\n              />\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n          <Navbar.Collapse id=\"navbarScroll\">\r\n            <Nav\r\n              className=\"mr-auto my-2 my-lg-0\"\r\n              style={{ maxHeight: '100px' }}\r\n              navbarScroll\r\n            >\r\n\r\n              <div className=\"linksChoise\">\r\n\r\n                <Button style={{ margin: \"5px\" }} variant=\"primary\"><a href=\"https://www.facebook.com/\" style={{ textDecoration: \"none\", color: \"white\", fontWeight: \"bold\" }}><p>Facebook</p></a></Button>{' '}\r\n\r\n                <Button style={{ margin: \"5px\" }} variant=\"outline-success\"><Link to=\"/Login\" style={{ textDecoration: \"none\", color: \"black\" }}><p>Login</p></Link></Button>{' '}\r\n\r\n                <Button style={{ margin: \"5px\" }} variant=\"outline-success\"><Link onClick={checkRegister} style={{ textDecoration: \"none\", color: \"black\" }}><p>Register</p></Link></Button>{' '}\r\n\r\n              </div>\r\n\r\n            </Nav>\r\n\r\n\r\n            <Form className=\"d-flex\">\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src={require(\"../images/user1.png\").default}\r\n                width=\"36\"\r\n                height=\"36\"\r\n                style={{ cursor: \"pointer\" }}\r\n                class=\"d-inline-block align-top\"\r\n                alt=\"Profile\"\r\n                onClick={checkProfile}\r\n              />\r\n\r\n            </Form>\r\n\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </>\r\n\r\n    );\r\n  }\r\n\r\n  else { // אם המשתמש מחובר - הצגת תמונה אישית\r\n\r\n    return (\r\n\r\n      <>\r\n        <Navbar style={{ background: \"#f6f5fa\" }} expand=\"lg\">\r\n          <Navbar.Brand className=\"Logo\">\r\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              <img\r\n                src={require(\"../images/Logo.png\").default}\r\n              />\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n          <Navbar.Collapse id=\"navbarScroll\">\r\n            <Nav\r\n              className=\"mr-auto my-2 my-lg-0\"\r\n              style={{ maxHeight: '100px' }}\r\n              navbarScroll\r\n            >\r\n\r\n              <div className=\"linksChoise\">\r\n\r\n                <Button style={{ margin: \"5px\" }} variant=\"primary\"><a href=\"https://www.facebook.com/\" style={{ textDecoration: \"none\", color: \"white\", fontWeight: \"bold\" }}><p>Facebook</p></a></Button>{' '}\r\n\r\n                <Button style={{ margin: \"5px\" }} variant=\"outline-success\"><Link to=\"/Login\" style={{ textDecoration: \"none\", color: \"black\" }}><p>Login</p></Link></Button>{' '}\r\n\r\n                <Button style={{ margin: \"5px\" }} variant=\"outline-success\"><Link onClick={checkRegister} style={{ textDecoration: \"none\", color: \"black\" }}><p>Register</p></Link></Button>{' '}\r\n\r\n              </div>\r\n\r\n\r\n            </Nav>\r\n\r\n\r\n            <Form className=\"d-flex\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n\r\n\r\n\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src={user.Photo}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                style={{ cursor: \"pointer\", borderRadius: \"50%\", border: \"2px solid grey\" }}\r\n                class=\"d-inline-block align-top\"\r\n                alt=\"Profile\"\r\n                onClick={checkProfile}\r\n\r\n              />\r\n              {user.First_name}\r\n\r\n\r\n\r\n            </Form>\r\n\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Menu;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\Login.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\home.js",["108","109"],"import { CardColumns } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport '../style/home.css';\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n  const [categories, SetCategories] = useState([])\r\n\r\n\r\n  const LoadCategories = async () => {\r\n\r\n    let res = await fetch(API.CATEGORIES.GET, { method: 'GET' });\r\n    let data = await res.json();\r\n\r\n    SetCategories(data);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    LoadCategories();\r\n\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div >\r\n\r\n      <div className=\"StyleCarousel\">\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src={require(\"../images/homeee.png\").default}\r\n        />\r\n      </div>\r\n\r\n\r\n      <br></br>\r\n\r\n\r\n      <CardColumns>\r\n\r\n        {categories.map(category =>\r\n\r\n          <div className=\"NEWS1\">\r\n            <div className=\"NEWScard\">\r\n              <img src={category.Photo} />\r\n              <div className=\"top-left\">\r\n                <NavLink to={`/CommunityPage/${category.Serial_code}`}\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"#fff\",\r\n                    borderColor: \"white\",\r\n                    background: \"#00000082\",\r\n                    borderRadius: \"8px 0px\",\r\n                    borderTopLeftRadius: \"14px\",\r\n                    top: \"0px\",\r\n                    left: \"0px\",\r\n                    fontSize: \"25px\",\r\n                    borderBottom: \"2px solid #fff\",\r\n                    borderRight: \"2px solid #fff\",\r\n                    position: \"absolute\",\r\n                    padding: \"4px\",\r\n                    textShadow: \"1px 0 0 #000, -1px 0 0 #000, 0 1px 0 #000, 0 -1px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000\",\r\n                    fontFamily: \"fantasy\"\r\n                  }}\r\n                >{category.Name_category}</NavLink>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        )\r\n        }\r\n\r\n      </CardColumns>\r\n\r\n      <br></br>\r\n      <br></br>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\MessagePage.js",["110","111","112","113","114","115"],"import '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { API } from '../API';\r\nimport { Button } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst MessagePage = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [topics, SetTopics] = useState([])//הצגת כותרת \r\n    const [comments, SetComments] = useState([]) //הצגת תגובות\r\n    const [comment, SetComment] = useState('') //הוספת תגובה\r\n    \r\n\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    let u = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n\r\n\r\n\r\n    const LoadTopics = async () => {\r\n\r\n        let res = await fetch(`${API.TOPICS.GET}/${id}/message`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetTopics(data);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const LoadComments = async () => {\r\n\r\n        let res = await fetch(`${API.COMMENTS.GET}/${id}/comments`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetComments(data);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const checkComment = async () => {\r\n\r\n        if (comment == '') {\r\n            swal(\"Stop\", \"You need to add a comment!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        else {\r\n            addComment();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const addComment = async () => {\r\n\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        if (userData == null || userData == undefined) {\r\n            swal(\"Stop!\", \"You need to sign in!\", \"warning\");\r\n            history.push(\"/Login\");\r\n        }\r\n\r\n        try {\r\n            let publishBy = userData.User_code;\r\n            let d = new Date();\r\n\r\n            let user = {\r\n                Topic_number: id,\r\n                Comment: comment,\r\n                Publish_by: publishBy,\r\n                Date_published: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`\r\n            }\r\n            console.log(user);\r\n            let res = await fetch(API.COMMENTS.ADD, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n\r\n            swal(\"Added a comment successfully!\", \"\", \"success\");\r\n            window.location.reload(false); // רענון דף\r\n            let data = await res.json()\r\n            console.log(data)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadTopics();\r\n        LoadComments();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    if (u != null || u != undefined) {\r\n        return (\r\n\r\n            <div className=\"formMessage\">\r\n\r\n                {topics.map(topic =>\r\n\r\n                    <div className=\"titlePageMessage\">\r\n                        <p >\r\n                            <NavLink to={`/`}>\r\n                                <img src={require(\"../images/hhh.png\").default}\r\n                                    style={{ margin: \"5px\", paddingBottom: \"4px\" }}\r\n                                    width=\"37\"\r\n                                    height=\"37\"\r\n                                    alt=\"Profile\"\r\n                                />\r\n                            </NavLink>\r\n\r\n\r\n                            <NavLink to={`/CommunityPage/${topic.Category_code}`}\r\n                                style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                <a target=\"_blank\">  Community Page {'> '} </a>\r\n                            </NavLink>\r\n\r\n                            Message Page {'> '}\r\n\r\n                            {topic.Topic_title}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"topic-container\">\r\n\r\n                    <div className=\"head\">\r\n\r\n                        <div className=\"authors\">Author</div>\r\n                        <div className=\"content\">Topic: random topic</div>\r\n\r\n                    </div>\r\n\r\n\r\n                 \r\n                    {topics.map(topic =>\r\n                        <div className=\"body\">\r\n\r\n                            <div className=\"authors\">\r\n                                {/* מעבר לדף פרטי משתמש ע\"י לחיצה על תמונה של הודעה ראשית */}\r\n                                <NavLink to={`/UserInfo/${topic.Publish_by}`}>\r\n                                    <img src={topic.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#28a745\", fontSize: \"17px\" }}>\r\n                                    {topic.First_name} {topic.Last_name}, {topic.City}</div>\r\n\r\n                                <div className=\"date\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                    Date Publish: <p>{topic.Date_published}</p></div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"content\">\r\n                                {topic.Topic_text}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n\r\n\r\n\r\n                {comments.map(comment =>\r\n                    <div className=\"body\">\r\n\r\n                        <div className=\"authors\">\r\n                            <div className=\"username\">\r\n                                {/* מעבר לדף פרטי משתמש ע\"י לחיצה על תמונה של תגובה  */}\r\n                                <NavLink to={`/UserInfo/${comment.Publish_by}`}>\r\n                                    <img src={comment.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\", fontSize: \"15px\" }}>\r\n                                    {comment.First_name} {comment.Last_name}, {comment.City} </div>\r\n\r\n                                <div className=\"date\">Date Publish: <p>{comment.Date_published}</p></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"content\">\r\n                            {comment.Comment}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n\r\n             \r\n\r\n                <div className=\"comment-area hide\" id=\"comment-area\" >\r\n                    <textarea name=\"comment\" id=\"\" placeholder=\"comment here ... \"\r\n                        value={comment}\r\n                        onChange={(event) => SetComment(event.target.value)}></textarea>\r\n                </div>\r\n\r\n                <Button variant=\"success\" onClick={checkComment}>\r\n                    Send Message\r\n                </Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    else {\r\n        return (\r\n\r\n            <div className=\"formMessage\">\r\n\r\n                {topics.map(topic =>\r\n\r\n                    <div className=\"titlePageMessage\">\r\n                        <p >\r\n                            <NavLink to={`/`}>\r\n                                <img src={require(\"../images/hhh.png\").default}\r\n                                    style={{ margin: \"5px\", paddingBottom: \"4px\" }}\r\n                                    width=\"37\"\r\n                                    height=\"37\"\r\n                                    alt=\"Profile\"\r\n                                />\r\n                            </NavLink>\r\n\r\n                            <NavLink to={`/CommunityPage/${topic.Category_code}`}\r\n                                style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                <a target=\"_blank\">  Community Page {'> '} </a>\r\n                            </NavLink>\r\n\r\n                            Message Page {'> '}\r\n\r\n                            {topic.Topic_title}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"topic-container\">\r\n\r\n                    <div className=\"head\">\r\n\r\n                        <div className=\"authors\">Author</div>\r\n                        <div className=\"content\">Topic: random topic</div>\r\n\r\n                    </div>\r\n\r\n                    {topics.map(topic =>\r\n                        <div className=\"body\">\r\n\r\n                            <div className=\"authors\">\r\n\r\n                                <NavLink to={`/UserInfo/${topic.Publish_by}`}>\r\n                                    <img src={topic.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#28a745\", fontSize: \"14px\" }}>\r\n                                    {topic.First_name} {topic.Last_name}, {topic.City}</div>\r\n\r\n                                <div className=\"date\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\" }}>\r\n                                    Date Publish: <p>{topic.Date_published}</p></div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"content\">\r\n                                {topic.Topic_text}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n\r\n\r\n                {comments.map(comment =>\r\n                    <div className=\"body\">\r\n\r\n                        <div className=\"authors\">\r\n                            <div className=\"username\">\r\n                                <NavLink to={`/UserInfo/${comment.Publish_by}`}>\r\n                                    <img src={comment.Photo} alt=\"\" height=\"140px\" width=\"110\" />\r\n                                </NavLink>\r\n                                <div className=\"username\"\r\n                                    style={{ textDecoration: \"none\", color: \"#6b6b6b\", fontSize: \"14px\" }}>\r\n                                    {comment.First_name} {comment.Last_name}, {comment.City} </div>\r\n\r\n                                <div className=\"date\">Date Publish: <p>{comment.Date_published}</p></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"content\">\r\n                            {comment.Comment}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n\r\n\r\n                <div className=\"connectuser\">\r\n                    <p>You need to <a href=\"/Login\">login</a> or <a href=\"/Register\">register</a> to post a comment.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagePage;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\components\\footer.js",["116","117","118","119","120","121","122"],"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport React from 'react';\r\nimport './style_componets/footer.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert'; // popup \r\n\r\nconst Footer = () => {\r\n\r\n\tconst history = useHistory()\r\n\r\n\r\n\r\n\tconst checkProfile = async () => {\r\n\t\tlet u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n\t\tif (u == null || u == undefined) {\r\n\t\t\tswal(\"Stop\", \"You need to login first!\", \"warning\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\thistory.push(`/Profile/${u.User_code}`);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n\tconst checkRegister = async () => { // אם המשתמש מחובר הוא לא יוכל לבצע הרשמה ולהפך\r\n\r\n\t\tlet u = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\t\r\n\t\tif (u != null || u != undefined) {\r\n\t\t  swal(\"Stop\", \"You need to Logout first!\", \"warning\");\r\n\t\t}\r\n\t\telse {\r\n\t\t  history.push(`/Register`);\r\n\t\t}\r\n\t  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"foot\">\r\n\t\t\t<footer className=\"footer-distributed\">\r\n\r\n\t\t\t\t<div className=\"footer-left\">\r\n\r\n\t\t\t\t\t<Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={require(\"../images/Logo.png\").default}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: 'auto',\r\n\t\t\t\t\t\t\t\theight: '58px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t<p className=\"footer-company-name\">Made by Artium and Shelly © 2022</p>\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"footer-center\">\r\n\r\n\t\t\t\t\t<p className=\"footer-links\">\r\n\r\n\t\t\t\t\t\t<a href=\"#\" className=\"link-1\"><Link to=\"/\"><span>Home</span></Link></a>\r\n\r\n\t\t\t\t\t\t<a href=\"#\" className=\"link-2\" onClick={checkRegister}><span>Register</span></a>\r\n\r\n\t\t\t\t\t\t<a href=\"#\" className=\"link-3\" onClick={checkProfile}><span>Profile</span></a>\r\n\r\n\t\t\t\t\t\t<a href=\"#\" className=\"link-4\"><Link to=\"/Login\"><span>Login</span></Link></a>\r\n\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"footer-right\">\r\n\r\n\t\t\t\t\t<p className=\"footer-company-about\">\r\n\t\t\t\t\t\t<span>About the forum</span>\r\n\t\t\t\t\t\tThis forum deals with a variety of general topics related to everyone's daily lives.\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<div className=\"footer-icons\">\r\n\r\n\t\t\t\t\t\t<a href=\"https://www.facebook.com/\" >\r\n\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t<img class=\"image1\"\r\n\t\t\t\t\t\t\t\t\tsrc={require(\"../images/f.jpg\").default}\r\n\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t<a href=\"https://www.instagram.com\">\r\n\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t<img class=\"image2\"\r\n\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Instagram.png\").default}\r\n\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t<a href=\"https://twitter.com/twitter\">\r\n\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t<img class=\"image3\"\r\n\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Twitter.png\").default}\r\n\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t<a href=\"https://mail.google.com/\">\r\n\t\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\t\t<img class=\"image4\"\r\n\t\t\t\t\t\t\t\t\tsrc={require(\"../images/Gmail.png\").default}\r\n\t\t\t\t\t\t\t\t\twidth=\"25\"\r\n\t\t\t\t\t\t\t\t\theight=\"25\"\r\n\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\CommunityPage.js",["123","124","125","126"],"import { Button, Form } from 'react-bootstrap'\r\nimport '../style/MessagePage_CommunityPage.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst CommunityPage = (props) => {\r\n\r\n\r\n    // for popup add topic close or open window\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [TopicTitle, setTopicTitle] = useState(''); //input\r\n    const [TopicText, setTopicText] = useState('');\r\n\r\n    const [titleCategory, SetTitleCategory] = useState([]); //כותרת בתחילה העמוד - איזה קטגוריה באותו דף אשכול\r\n\r\n    const [topics, SetTopics] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    let Category_code = id;\r\n\r\n\r\n\r\n\r\n    // פונקציה הטוענת אשכול מסוים לפי קטגוריה מסוימת אליה הוא משתייך\r\n    const LoadTopics = async () => {\r\n\r\n        let res = await fetch(`${API.CATEGORIES.GET}/${Category_code}/topics`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetTopics(data);\r\n    }\r\n\r\n\r\n\r\n\r\n    // טיפול בשגיאות - אם השדות של הוספת אשכול ריקים\r\n    const checkTopic = async () => {\r\n\r\n        if (TopicTitle == '' || TopicText == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        else {\r\n            addTopic();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // פונקציה המטפלת בהוספת אשכול\r\n    const addTopic = async () => {\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        // אם המשתמש לא מחובר הוא לא יכול להוסיף אשכול\r\n        if (userData == null || userData == undefined) {\r\n            swal(\"Stop\", \"You need to sign in!\", \"warning\");\r\n        }\r\n\r\n\r\n        try {\r\n            let Publish_by = userData.User_code;\r\n\r\n            let d = new Date(); // הגדרת משתנה לתאריך\r\n\r\n            let user = {\r\n                Category_code,\r\n                TopicTitle,\r\n                TopicText,\r\n                DatePublished: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`,\r\n                Publish_by\r\n            }\r\n\r\n            let res = await fetch(API.TOPICS.ADD, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n\r\n            swal(\"Added a topic successfully!\", \"\", \"success\");\r\n\r\n            window.location.reload(false); // רענון דף\r\n            let data = await res.json()\r\n            console.log(data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // פונקציה האחראית על הצגה של שם הקטגוריה הספציפית שרואים כעת את האשכולים שלה -> דף אשכול\r\n    const LoadCategory = async () => {\r\n\r\n        let res = await fetch(`${API.CATEGORIES.GET}/${Category_code}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetTitleCategory(data);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadTopics();\r\n        LoadCategory();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"posts-table\">\r\n\r\n            {titleCategory.map(title =>\r\n\r\n                <div className=\"titlePageCommunity\">\r\n                    <p>\r\n                        <NavLink to={`/`}>\r\n                            <img src={require(\"../images/hhh.png\").default}\r\n                                style={{ margin: \"5px\", paddingBottom: \"4px\" }}\r\n                                width=\"auto\"\r\n                                height=\"37\"\r\n                                alt=\"Profile\"\r\n                            />\r\n                        </NavLink>\r\n\r\n                        Community Page {'> '}\r\n\r\n                        {title.Name_category}\r\n                    </p>\r\n\r\n                    <Button variant=\"success\" size=\"sm\"\r\n                        onClick={handleShow}\r\n                        style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                        Add New Cluster\r\n                    </Button>\r\n                </div>\r\n            )}\r\n\r\n\r\n            <Modal show={show} onHide={handleClose} animation={true} size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n\r\n                <section className=\"window\">\r\n\r\n                    <div className=\"boxWin image\">\r\n\r\n                        <div className=\"imageTopicAdd\">\r\n\r\n                            <Form >\r\n                                <Form.Text className=\"text-muted1\">\r\n                                    <p>Create new Topic</p>\r\n                                </Form.Text>\r\n                                <br></br>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"boxWin contectWin\">\r\n\r\n                        <div className=\"AddTopicPop\">\r\n\r\n                            <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Topic Title :</label><br />\r\n                            <input type=\"text\"\r\n                                required\r\n                                placeholder=\"Title\"\r\n                                value={TopicTitle}\r\n                                onChange={(event) => setTopicTitle(event.target.value)}\r\n                            />\r\n\r\n                            <br></br>\r\n\r\n                            <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Write Post :</label><br />\r\n                            <textarea type=\"text\"\r\n                                required\r\n                                placeholder=\"Post\"\r\n                                value={TopicText}\r\n                                onChange={(event) => setTopicText(event.target.value)}\r\n\r\n                            />\r\n\r\n                            <br></br>\r\n\r\n                            <Button variant=\"success\" type=\"addTopic\" onClick={checkTopic}\r\n                                style={{ fontFamily: \"Verdana\" }} >\r\n                                Add New Topic\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </Modal>\r\n\r\n\r\n\r\n            <div className=\"table-head\">\r\n                <div className=\"status\">Users</div>\r\n                <div className=\"subjects\">Topics</div>\r\n                <div className=\"replies\">Replies</div>\r\n                <div className=\"last-reply\">Date Publish</div>\r\n            </div>\r\n\r\n\r\n\r\n            {\r\n                topics.map(topic =>\r\n\r\n                    <div className=\"table-row\">\r\n\r\n                        <div className=\"status\">\r\n                            <img\r\n                                src={topic.Photo}\r\n                                alt=\"Profile\" />\r\n                        </div>\r\n\r\n                        <div className=\"subjects\">\r\n\r\n                            <NavLink to=\r\n                                {`/MessagePage/${topic.Serial_code}`}\r\n                                style={{ textDecoration: \"none\", color: \"green\", fontSize: \"15px\" }}>\r\n                                {topic.Topic_title}\r\n                            </NavLink>\r\n                            <br />\r\n\r\n                            <span\r\n                                style={{ textDecoration: \"none\", color: \"black\", fontSize: \"13px\" }}>\r\n                                Started by\r\n                                <b> {topic.First_name} {topic.Last_name}</b>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"replies\">\r\n                            {topic.Count_Comments}\r\n                        </div>\r\n\r\n                        <div className=\"datePublish\">\r\n                            {topic.Date_published}\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n\r\n            }\r\n\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CommunityPage;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\register.js",["127","128","129","130"],"import { Button, Form, Col, Row } from 'react-bootstrap'\r\nimport { useState } from \"react\";\r\nimport \"../style/register.css\";\r\nimport { API } from '../API';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Register = (props) => {\r\n  // הגדרת משתנים עבור טופס הרשמה\r\n  const history = useHistory()\r\n\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [FirstName, setFirstName] = useState('');\r\n  const [LastName, setLastName] = useState('');\r\n  const [City, setCity] = useState('');\r\n  const [Birthday, setBirthday] = useState('');\r\n  const [Email, setEmail] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [ConfirmPassword, setConfirmPassword] = useState('');\r\n  const [Id, setId] = useState('');\r\n  const [file, setFile] = useState('');\r\n\r\n\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n\r\n    const form = event.currentTarget;\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n\r\n    // === לעומת == גם מתייחס לסוג המשתנים ולא רק לערך שלהם כמו ב ==\r\n    if (Password === ConfirmPassword && Password.length >= 8 && Password.length <= 12) { //אם הסיסמאות זהות ניתן להירשם\r\n      setValidated(true);\r\n      uploadImage();\r\n      swal(\"You have successfully registered!\", \"\", \"success\");\r\n      history.push(`/Login`);\r\n    }\r\n\r\n    if (Password === ConfirmPassword && Password.length < 8 || Password.length > 12) { //אם הסיסמאות זהות ניתן להירשם\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      swal(\"Password length is incorrect! Password length should be between 8 and 12 numbers!\", \"\", \"warning\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (Password != ConfirmPassword ) { //אם הסיסמאות אינן זהות לא ניתן להתחבר \r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      swal(\"Stop\", \"Passwords don't match!\", \"warning\");\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const uploadImage = async () => { //העלאת תמונה\r\n    try {\r\n      const form = new FormData();\r\n      form.append(\"photo\", file); //הוספת קובץ\r\n      let res = await fetch(API.USERS.UPLOAD, {\r\n        method: 'POST',\r\n        body: form\r\n      });\r\n      let data = await res.json()\r\n      if (data.img) {\r\n        registerUser(data.img)\r\n      }\r\n    } catch (error) {\r\n      swal(error, \"\", \"error\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const registerUser = async (img) => { //פונקציה להרשמה של משתמש\r\n    try {\r\n      let user = {\r\n        FirstName,\r\n        LastName,\r\n        City,\r\n        Birthday,\r\n        Email,\r\n        Password,\r\n        Id,\r\n        UserTypeCode: 1,\r\n        ConfirmPassword,\r\n        Photo: img\r\n      }\r\n      console.log(user)\r\n      let res = await fetch(API.USERS.ADD, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n      });\r\n      // let data = await res.json();\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      swal(error, \"\", \"error\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"reg\">\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit} >\r\n\r\n        <div className=\"titlePageRegister\">\r\n          <p>Another moment and you are with us 😃</p>\r\n        </div>\r\n\r\n        <Row className=\"mb-3\">\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              value={FirstName}\r\n              onChange={(event) => setFirstName(event.target.value)}\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              value={LastName}\r\n              onChange={(event) => setLastName(event.target.value)}\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom03\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control type=\"text\"\r\n              placeholder=\"City\"\r\n              value={City}\r\n              onChange={(event) => setCity(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n            <Form.Label>Birthday</Form.Label>\r\n            <Form.Control\r\n              placeholder=\"Birthday\"\r\n              value={Birthday}\r\n              type=\"date\"\r\n              onChange={(event) => setBirthday(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid state.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom05\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={Email}\r\n              onChange={(event) => setEmail(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\"\r\n              value={Password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label> Confirm password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Confirm password\"\r\n              value={ConfirmPassword}\r\n              onChange={(event) => setConfirmPassword(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Id</Form.Label>\r\n            <Form.Control type=\"number\" placeholder=\"Id\"\r\n              value={Id}\r\n              onChange={(event) => setId(event.target.value)}\r\n              required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n\r\n          <Form.Group as={Col} md=\"4\" className=\"mb-3\" controlId=\"validationCustom05\">\r\n            <br></br>\r\n            <Form.Control\r\n              type=\"file\"\r\n              onChange={(event) => setFile(event.target.files[0])}\r\n              required\r\n            />\r\n            <br></br>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n            feedbackType=\"invalid\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <div className=\"sub\">\r\n          <Button type=\"submit\">Submit form</Button>\r\n        </div>\r\n\r\n      </Form>\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\nexport default Register;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateTopic.js",["131","132","133"],"import { Button } from 'react-bootstrap'\r\nimport '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst UpdateTopic = (props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [TopicTitle, setTopicTitle] = useState('');\r\n    const [TopicText, setTopicText] = useState('');\r\n\r\n    const [topics, SetTopic] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    let Serial_code = id;\r\n\r\n\r\n    // פונקציה האחראית על הצגת האשכולים ע\"י הקוד הסידורי של כל אשכול\r\n    const LoadTopic = async () => {\r\n\r\n        let res = await fetch(`${API.TOPICS.GET}/${Serial_code}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetTopic(data);\r\n    }\r\n\r\n\r\n\r\n\r\n    const checkUpdateTopics = async (CategoryCode) => {\r\n\r\n        if (TopicTitle == '' || TopicText == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        else {\r\n            updateTopic(CategoryCode);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // פונקציה האחראית על עדכון פרטי אשכול\r\n    const updateTopic = async (CategoryCode) => {\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        try {\r\n            let Publish_by = userData.User_code;\r\n            let d = new Date();\r\n\r\n            let user = {\r\n                Category_code: CategoryCode,\r\n                Publish_by,\r\n                TopicTitle,\r\n                TopicText,\r\n                DatePublished: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`,\r\n            }\r\n\r\n            let res = await fetch(`${API.TOPICS.GET}/update/${Serial_code}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n\r\n            let data = await res.json()\r\n            swal(\"You have successfully updated your details!\", \"\", \"success\");\r\n\r\n            history.push(`/Profile/${data.User_code}`);\r\n\r\n\r\n            console.log(data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadTopic();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        topics.map(topic =>\r\n\r\n            <div className=\"box\">\r\n\r\n                <div className=\"AddTopicPop\">\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Topic Title :</label><br />\r\n                    <input type=\"text\"\r\n                        required\r\n                        placeholder={topic.Topic_title}\r\n                        value={TopicTitle}\r\n                        onChange={(event) => setTopicTitle(event.target.value)}\r\n                    />\r\n\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Write Post :</label><br />\r\n                    <textarea type=\"text\"\r\n                        required\r\n                        placeholder={topic.Topic_text}\r\n                        value={TopicText}\r\n                        onChange={(event) => setTopicText(event.target.value)}\r\n\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                    <Button variant=\"success\" type=\"addTopic\" onClick={() => checkUpdateTopics(topic.Category_code)}>\r\n                        Update Topic\r\n                    </Button>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default UpdateTopic;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateUser.js",["134","135","136","137","138","139"],"import { Button, Form, Col, Row } from 'react-bootstrap'\r\nimport '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n// עדכון פרטי משתמש בדף אדמין בלבד\r\nconst UpdateUser = (props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [FirstName, setFirstName] = useState('');\r\n    const [LastName, setLastName] = useState('');\r\n    const [City, setCity] = useState('');\r\n    const [Birthday, setBirthday] = useState('');\r\n    const [Email, setEmail] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const [ConfirmPassword, setConfirmPassword] = useState('');\r\n    const [Id, setId] = useState('');\r\n\r\n    const [users, SetUser] = useState([]);\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n\r\n\r\n\r\n    const LoadUser = async () => {\r\n\r\n        let res = await fetch(`${API.USERS.GET}/${id}`, { method: 'GET' });\r\n\r\n        let data = await res.json();\r\n        SetUser(data);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // טיפול בשגיאות בנסיון לשנות לסיסמא חדשה\r\n    const checkPasswordInput = async () => {\r\n\r\n        if (Password == '' || ConfirmPassword == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length >= 8 && Password.length <= 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"You have successfully update your password!\", \"\", \"success\");\r\n            updateUser();\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length < 8 || Password.length > 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"Password length is incorrect! Password length should be between 8 and 12 numbers!\", \"\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (Password != ConfirmPassword) { //אם הסיסמאות אינן זהות לא ניתן להתחבר \r\n            swal(\"Stop\", \"Passwords don't match!\", \"warning\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const updateUser = async () => {\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        try {\r\n            let d = new Date(Birthday);\r\n\r\n            let user = {\r\n                First_name: FirstName,\r\n                Last_name: LastName,\r\n                City,\r\n                Birthday: `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`,\r\n                Email,\r\n                User_password: Password,\r\n                Id,\r\n                UserType_code: 1,\r\n                Photo: null,\r\n                Confirm_password: ConfirmPassword\r\n            }\r\n\r\n            let res = await fetch(`${API.USERS.GET}/update/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            let data = await res.json()\r\n            swal(\"You have successfully updated user details!\", \"\", \"success\");\r\n            console.log(data)\r\n\r\n\r\n            history.push(`/Admin/${userData.User_code}`); // לאחר העדכון חזרה לדף אדמין\r\n            window.location.reload(false); // רענון דף\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n\r\n        e.preventDefault(); // אירועים לא פועלים בו זמנית-אירוע סינתטי\r\n        checkPasswordInput();\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadUser();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        users.map(user =>\r\n\r\n            <div className=\"reg\">\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n\r\n\r\n                <Form onSubmit={handleFormSubmit}>\r\n\r\n\r\n                    <Row className=\"mb-3\">\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                            <Form.Label>First name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder={user.First_name}\r\n                                value={FirstName}\r\n                                onChange={(event) => setFirstName(event.target.value)}\r\n                            />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder={user.Last_name}\r\n                                value={LastName}\r\n                                onChange={(event) => setLastName(event.target.value)}\r\n                            />\r\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom03\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder={user.City}\r\n                                value={City}\r\n                                onChange={(event) => setCity(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid city.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n                            <Form.Label>Birthday</Form.Label>\r\n                            <Form.Control\r\n                                placeholder={user.Birthday}\r\n                                value={Birthday}\r\n                                type=\"date\"\r\n                                onChange={(event) => setBirthday(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid state.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom05\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\"\r\n                                placeholder={user.Email}\r\n                                value={Email}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder={user.User_password}\r\n                                value={Password}\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                            <Form.Label> Confirm password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder={user.Confirm_password}\r\n                                value={ConfirmPassword}\r\n                                onChange={(event) => setConfirmPassword(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n\r\n\r\n\r\n                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n                            <Form.Label>Id</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder={user.Id}\r\n                                value={Id}\r\n                                onChange={(event) => setId(event.target.value)}\r\n                                required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please provide a valid zip.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n\r\n                    <Button variant=\"success\" >\r\n                        Update User\r\n                    </Button>\r\n\r\n                </Form>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default UpdateUser;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateCategory.js",["140","141"],"import { Button, Form } from 'react-bootstrap'\r\nimport '../style/MessagePage_CommunityPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst UpdateCategory = (props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [NameCategory, setNameCategory] = useState('');\r\n    const [file, setFile] = useState('');\r\n\r\n    const [categories, SetCategory] = useState([])\r\n\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    // הצגה של ערכי הנתונים הקודמים בשדות של עדכון קטגוריה\r\n    const LoadCategory = async () => {\r\n\r\n        let res = await fetch(`${API.CATEGORIES.GET}/${id}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetCategory(data);\r\n    }\r\n\r\n\r\n\r\n    const checkUpdateCategoryFiled = async () => {\r\n\r\n        if (NameCategory == '' || !file) {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        else {\r\n            uploadImage();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const uploadImage = async () => {\r\n        try {\r\n            const form = new FormData();\r\n            form.append(\"photo\", file);\r\n            let res = await fetch(API.CATEGORIES.UPLOAD, {\r\n                method: 'POST',\r\n                body: form\r\n            });\r\n            let data = await res.json()\r\n            if (data.img) {\r\n                updateCategory(data.img);\r\n            }\r\n        } catch (error) {\r\n            swal(error, \"\", \"error\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //Update Function\r\n    const updateCategory = async (img) => {\r\n        let userData = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n        try {\r\n\r\n            let user = {\r\n                Name_category: NameCategory,\r\n                Photo: img\r\n            }\r\n\r\n            let res = await fetch(`${API.CATEGORIES.GET}/update/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            let data = await res.json()\r\n            console.log(data)\r\n\r\n            swal(\"You have successfully updated category!\", \"\", \"success\");\r\n            history.push(`/Admin/${userData.User_code}`);\r\n            window.location.reload(false); // רענון דף\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadCategory();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        categories.map(category =>\r\n\r\n            <div className=\"box\">\r\n\r\n                <div className=\"AddTopicPop\">\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Category Name :</label><br />\r\n                    <input type=\"text\"\r\n                        required\r\n                        placeholder={category.Name_category}\r\n                        value={NameCategory}\r\n                        onChange={(event) => setNameCategory(event.target.value)}\r\n                    />\r\n\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Category Image :</label><br />\r\n                    <Form.Control type=\"file\" onChange={(event) => setFile(event.target.files[0])} />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                    <Button variant=\"success\" type=\"addTopic\" onClick={() => checkUpdateCategoryFiled()}>\r\n                        Update Category\r\n                    </Button>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    );\r\n}\r\n\r\nexport default UpdateCategory;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\admin.js",["142","143","144","145","146","147","148","149","150","151","152","153","154"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\updateNewPassword.js",["155","156","157","158","159","160"],"import { Button } from 'react-bootstrap'\r\nimport '../style/updatePasswordPage.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst UpdateNewPassword = (props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [Password, setPassword] = useState('');\r\n    const [ConfirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [users, SetUsers] = useState([])\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n\r\n    // כדי להציג את שם המשתמש בכותרת\r\n    const LoadInfo = async () => {\r\n\r\n        let res = await fetch(`${API.USERS.GET}/${id}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetUsers(data);\r\n    }\r\n\r\n\r\n\r\n       // טיפול בשגיאות בנסיון לשנות לסיסמא חדשה\r\n       const checkPasswordInput = async () => {\r\n\r\n        if (Password == '' || ConfirmPassword == '') {\r\n            swal(\"Stop\", \"You need to fill in all the fields!\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length >= 8 && Password.length <= 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"You have successfully update your password!\", \"\", \"success\");\r\n            updatePassword();\r\n        }\r\n\r\n        if (Password === ConfirmPassword && Password.length < 8 || Password.length > 12) { //אם הסיסמאות זהות ניתן להירשם\r\n            swal(\"Password length is incorrect! Password length should be between 8 and 12 numbers!\", \"\", \"warning\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (Password != ConfirmPassword) { //אם הסיסמאות אינן זהות לא ניתן להתחבר \r\n            swal(\"Stop\", \"Passwords don't match!\", \"warning\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // פונקציה האחראית על עדכון סיסמא ישנה שהמשתמש שכח לסיסמא חדשה\r\n    const updatePassword = async () => {\r\n\r\n        try {\r\n\r\n            let user = {\r\n                User_password: Password,\r\n                Confirm_password: ConfirmPassword\r\n            }\r\n\r\n            let res = await fetch(`${API.USERS.GET}/updatePassword/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            let data = await res.json()\r\n            console.log(data)\r\n\r\n\r\n            swal(\"You have successfully updated your password!\", \"\", \"success\");\r\n            history.push(`/`);\r\n            window.location.reload(false); // רענון דף\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadInfo();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        users.map(user =>\r\n\r\n            <div className=\"box\">\r\n\r\n                <div className=\"AddTopicPop\">\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <div className=\"titlePageUpdatePassword\">\r\n                        <p>Hi {user.First_name} update your password</p>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>New Password :</label><br />\r\n                    <input type=\"password\"\r\n                        required\r\n                        value={Password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n\r\n                    <br></br>\r\n\r\n                    <label for=\"fname\" style={{ fontFamily: \"Verdana\" }}>Confirm New Password :</label><br />\r\n                    <input type=\"password\"\r\n                        required\r\n                        value={ConfirmPassword}\r\n                        onChange={(event) => setConfirmPassword(event.target.value)}\r\n\r\n                    />\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                    <Button variant=\"success\" type=\"addTopic\" onClick={() => checkPasswordInput()}>\r\n                        Update Password\r\n                    </Button>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default UpdateNewPassword;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\profile.js",["161","162","163","164","165","166","167","168","169","170","171","172","173"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\pages\\UserInfo.js",["174","175"],"import '../style/profile.css';\r\nimport '../style/infoUser.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { API } from '../API';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    const [users, SetUsers] = useState([])\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    // אחראי על הצגת האינפורמציה לגבי אותו משתמש\r\n    const LoadInfo = async () => {\r\n\r\n        let res = await fetch(`${API.USERS.GET}/${id}`, { method: 'GET' });\r\n        let data = await res.json();\r\n\r\n        SetUsers(data);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        LoadInfo();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        users.map(user =>\r\n\r\n            <div>\r\n\r\n                <div className=\"title_info\">\r\n                    <p>{user.First_name} Details:</p>\r\n                </div>\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n          \r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"main-body\">\r\n\r\n\r\n                    <div className=\"row gutters-sm\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                        <img src={user.Photo} width=\"200\" />\r\n                                \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">Full Name</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.First_name} {user.Last_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">Email</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.Email}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">Birthday</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.Birthday}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3\">\r\n                                            <h6 className=\"mb-0\">City</h6>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9 text-secondary\">\r\n                                            {user.City}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\API.js",[],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Forum_react js+node js+sql\\Final_project_Client-main\\Final_project_Client-main\\src\\Config.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":24,"column":24,"nodeType":"182","messageId":"183","endLine":24,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":38,"column":24,"nodeType":"182","messageId":"183","endLine":38,"endColumn":26},{"ruleId":"180","severity":1,"message":"184","line":51,"column":24,"nodeType":"182","messageId":"183","endLine":51,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":69,"column":22,"nodeType":"182","messageId":"183","endLine":69,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":76,"column":15,"nodeType":"187","endLine":78,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":131,"column":15,"nodeType":"187","endLine":133,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":51,"column":15,"nodeType":"182","messageId":"183","endLine":51,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":51,"column":33,"nodeType":"182","messageId":"183","endLine":51,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":65,"column":12,"nodeType":"182","messageId":"183","endLine":65,"endColumn":14},{"ruleId":"180","severity":1,"message":"184","line":96,"column":26,"nodeType":"182","messageId":"183","endLine":96,"endColumn":28},{"ruleId":"180","severity":1,"message":"184","line":131,"column":26,"nodeType":"182","messageId":"183","endLine":131,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":138,"column":30,"nodeType":"182","messageId":"183","endLine":138,"endColumn":32},{"ruleId":"180","severity":1,"message":"181","line":144,"column":30,"nodeType":"182","messageId":"183","endLine":144,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":163,"column":24,"nodeType":"182","messageId":"183","endLine":163,"endColumn":26},{"ruleId":"180","severity":1,"message":"184","line":196,"column":26,"nodeType":"182","messageId":"183","endLine":196,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":203,"column":30,"nodeType":"182","messageId":"183","endLine":203,"endColumn":32},{"ruleId":"188","severity":1,"message":"189","line":249,"column":15,"nodeType":"187","endLine":249,"endColumn":43},{"ruleId":"185","severity":1,"message":"186","line":249,"column":43,"nodeType":"187","endLine":249,"endColumn":116},{"ruleId":"188","severity":1,"message":"190","line":261,"column":13,"nodeType":"187","endLine":263,"endColumn":14},{"ruleId":"188","severity":1,"message":"190","line":277,"column":13,"nodeType":"187","endLine":279,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":37,"column":9,"nodeType":"187","endLine":40,"endColumn":11},{"ruleId":"185","severity":1,"message":"186","line":53,"column":15,"nodeType":"187","endLine":53,"endColumn":43},{"ruleId":"180","severity":1,"message":"181","line":56,"column":21,"nodeType":"182","messageId":"183","endLine":56,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":74,"column":42,"nodeType":"182","messageId":"183","endLine":74,"endColumn":44},{"ruleId":"191","severity":1,"message":"192","line":114,"column":8,"nodeType":"193","endLine":114,"endColumn":10,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"184","line":119,"column":24,"nodeType":"182","messageId":"183","endLine":119,"endColumn":26},{"ruleId":"188","severity":1,"message":"189","line":140,"column":33,"nodeType":"187","endLine":140,"endColumn":52},{"ruleId":"188","severity":1,"message":"189","line":252,"column":33,"nodeType":"187","endLine":252,"endColumn":52},{"ruleId":"180","severity":1,"message":"181","line":18,"column":22,"nodeType":"182","messageId":"183","endLine":18,"endColumn":24},{"ruleId":"180","severity":1,"message":"184","line":32,"column":22,"nodeType":"182","messageId":"183","endLine":32,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":50,"column":7,"nodeType":"187","endLine":56,"endColumn":9},{"ruleId":"188","severity":1,"message":"190","line":68,"column":7,"nodeType":"187","endLine":68,"endColumn":38},{"ruleId":"188","severity":1,"message":"190","line":70,"column":7,"nodeType":"187","endLine":70,"endColumn":62},{"ruleId":"188","severity":1,"message":"190","line":72,"column":7,"nodeType":"187","endLine":72,"endColumn":61},{"ruleId":"188","severity":1,"message":"190","line":74,"column":7,"nodeType":"187","endLine":74,"endColumn":38},{"ruleId":"180","severity":1,"message":"181","line":49,"column":24,"nodeType":"182","messageId":"183","endLine":49,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":49,"column":43,"nodeType":"182","messageId":"183","endLine":49,"endColumn":45},{"ruleId":"180","severity":1,"message":"181","line":66,"column":42,"nodeType":"182","messageId":"183","endLine":66,"endColumn":44},{"ruleId":"191","severity":1,"message":"195","line":119,"column":8,"nodeType":"193","endLine":119,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":47,"column":38,"nodeType":"199","messageId":"200","endLine":47,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":47,"column":61,"nodeType":"199","messageId":"200","endLine":47,"endColumn":63},{"ruleId":"180","severity":1,"message":"184","line":55,"column":18,"nodeType":"182","messageId":"183","endLine":55,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":101,"column":11,"nodeType":"203","messageId":"204","endLine":101,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":37,"column":24,"nodeType":"182","messageId":"183","endLine":37,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":37,"column":43,"nodeType":"182","messageId":"183","endLine":37,"endColumn":45},{"ruleId":"191","severity":1,"message":"205","line":90,"column":8,"nodeType":"193","endLine":90,"endColumn":10,"suggestions":"206"},{"ruleId":"180","severity":1,"message":"181","line":47,"column":22,"nodeType":"182","messageId":"183","endLine":47,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":47,"column":47,"nodeType":"182","messageId":"183","endLine":47,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":57,"column":42,"nodeType":"199","messageId":"200","endLine":57,"endColumn":44},{"ruleId":"197","severity":1,"message":"198","line":57,"column":65,"nodeType":"199","messageId":"200","endLine":57,"endColumn":67},{"ruleId":"180","severity":1,"message":"184","line":63,"column":22,"nodeType":"182","messageId":"183","endLine":63,"endColumn":24},{"ruleId":"191","severity":1,"message":"207","line":121,"column":8,"nodeType":"193","endLine":121,"endColumn":10,"suggestions":"208"},{"ruleId":"180","severity":1,"message":"181","line":37,"column":26,"nodeType":"182","messageId":"183","endLine":37,"endColumn":28},{"ruleId":"191","severity":1,"message":"209","line":111,"column":8,"nodeType":"193","endLine":111,"endColumn":10,"suggestions":"210"},{"ruleId":"201","severity":1,"message":"202","line":128,"column":9,"nodeType":"203","messageId":"204","endLine":128,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":134,"column":9,"nodeType":"203","messageId":"204","endLine":134,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":140,"column":9,"nodeType":"203","messageId":"204","endLine":140,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":146,"column":9,"nodeType":"203","messageId":"204","endLine":146,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":169,"column":9,"nodeType":"203","messageId":"204","endLine":169,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":175,"column":9,"nodeType":"203","messageId":"204","endLine":175,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":181,"column":9,"nodeType":"203","messageId":"204","endLine":181,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":187,"column":9,"nodeType":"203","messageId":"204","endLine":187,"endColumn":12},{"ruleId":"180","severity":1,"message":"181","line":223,"column":22,"nodeType":"182","messageId":"183","endLine":223,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":322,"column":23,"nodeType":"187","endLine":322,"endColumn":72},{"ruleId":"185","severity":1,"message":"186","line":342,"column":23,"nodeType":"187","endLine":342,"endColumn":73},{"ruleId":"185","severity":1,"message":"186","line":380,"column":23,"nodeType":"187","endLine":380,"endColumn":77},{"ruleId":"185","severity":1,"message":"186","line":399,"column":23,"nodeType":"187","endLine":399,"endColumn":77},{"ruleId":"180","severity":1,"message":"181","line":38,"column":22,"nodeType":"182","messageId":"183","endLine":38,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":38,"column":47,"nodeType":"182","messageId":"183","endLine":38,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":48,"column":42,"nodeType":"199","messageId":"200","endLine":48,"endColumn":44},{"ruleId":"197","severity":1,"message":"198","line":48,"column":65,"nodeType":"199","messageId":"200","endLine":48,"endColumn":67},{"ruleId":"180","severity":1,"message":"184","line":54,"column":22,"nodeType":"182","messageId":"183","endLine":54,"endColumn":24},{"ruleId":"191","severity":1,"message":"211","line":100,"column":8,"nodeType":"193","endLine":100,"endColumn":10,"suggestions":"212"},{"ruleId":"180","severity":1,"message":"181","line":48,"column":28,"nodeType":"182","messageId":"183","endLine":48,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":61,"column":28,"nodeType":"182","messageId":"183","endLine":61,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":78,"column":28,"nodeType":"182","messageId":"183","endLine":78,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":100,"column":22,"nodeType":"182","messageId":"183","endLine":100,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":100,"column":47,"nodeType":"182","messageId":"183","endLine":100,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":110,"column":42,"nodeType":"199","messageId":"200","endLine":110,"endColumn":44},{"ruleId":"197","severity":1,"message":"198","line":110,"column":65,"nodeType":"199","messageId":"200","endLine":110,"endColumn":67},{"ruleId":"180","severity":1,"message":"184","line":116,"column":22,"nodeType":"182","messageId":"183","endLine":116,"endColumn":24},{"ruleId":"201","severity":1,"message":"202","line":201,"column":13,"nodeType":"203","messageId":"204","endLine":201,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":208,"column":13,"nodeType":"203","messageId":"204","endLine":208,"endColumn":16},{"ruleId":"191","severity":1,"message":"213","line":248,"column":8,"nodeType":"193","endLine":248,"endColumn":10,"suggestions":"214"},{"ruleId":"180","severity":1,"message":"181","line":268,"column":28,"nodeType":"182","messageId":"183","endLine":268,"endColumn":30},{"ruleId":"185","severity":1,"message":"186","line":611,"column":37,"nodeType":"187","endLine":611,"endColumn":96},{"ruleId":"191","severity":1,"message":"211","line":29,"column":8,"nodeType":"193","endLine":29,"endColumn":10,"suggestions":"215"},{"ruleId":"185","severity":1,"message":"186","line":63,"column":41,"nodeType":"187","endLine":63,"endColumn":77},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'LoadComments' and 'LoadTopics'. Either include them or remove the dependency array.","ArrayExpression",["218"],"React Hook useEffect has missing dependencies: 'LoadCategory' and 'LoadTopics'. Either include them or remove the dependency array.",["219"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'LoadTopic'. Either include it or remove the dependency array.",["220"],"React Hook useEffect has a missing dependency: 'LoadUser'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has a missing dependency: 'LoadCategory'. Either include it or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'LoadInfo'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'LoadSpecificUser'. Either include it or remove the dependency array.",["224"],["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"236","fix":"240"},"Update the dependencies array to be: [LoadComments, LoadTopics]",{"range":"241","text":"242"},"Update the dependencies array to be: [LoadCategory, LoadTopics]",{"range":"243","text":"244"},"Update the dependencies array to be: [LoadTopic]",{"range":"245","text":"246"},"Update the dependencies array to be: [LoadUser]",{"range":"247","text":"248"},"Update the dependencies array to be: [LoadCategory]",{"range":"249","text":"250"},"Update the dependencies array to be: [LoadInfo]",{"range":"251","text":"252"},"Update the dependencies array to be: [LoadSpecificUser]",{"range":"253","text":"254"},{"range":"255","text":"252"},[2629,2631],"[LoadComments, LoadTopics]",[3200,3202],"[LoadCategory, LoadTopics]",[2323,2325],"[LoadTopic]",[3534,3536],"[LoadUser]",[2573,2575],"[LoadCategory]",[2716,2718],"[LoadInfo]",[6579,6581],"[LoadSpecificUser]",[603,605]]